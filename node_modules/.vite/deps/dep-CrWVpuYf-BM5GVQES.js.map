{
  "version": 3,
  "sources": ["../../vite/dist/node/chunks/dep-CrWVpuYf.js"],
  "sourcesContent": ["import { fileURLToPath as __cjs_fileURLToPath } from 'node:url';\r\nimport { dirname as __cjs_dirname } from 'node:path';\r\nimport { createRequire as __cjs_createRequire } from 'node:module';\r\n\r\nconst __filename = __cjs_fileURLToPath(import.meta.url);\r\nconst __dirname = __cjs_dirname(__filename);\r\nconst require = __cjs_createRequire(import.meta.url);\r\nconst __require = require;\r\nconst UNDEFINED_CODE_POINTS = new Set([\r\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\r\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\r\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\r\n    1048575, 1114110, 1114111,\r\n]);\r\nconst REPLACEMENT_CHARACTER = '\\uFFFD';\r\nvar CODE_POINTS;\r\n(function (CODE_POINTS) {\r\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\r\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\r\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\r\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\r\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\r\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\r\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\r\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\r\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\r\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\r\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\r\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\r\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\r\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\r\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\r\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\r\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\r\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\r\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\r\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\r\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\r\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\r\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\r\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\r\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\r\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\r\nconst SEQUENCES = {\r\n    DASH_DASH: '--',\r\n    CDATA_START: '[CDATA[',\r\n    DOCTYPE: 'doctype',\r\n    SCRIPT: 'script',\r\n    PUBLIC: 'public',\r\n    SYSTEM: 'system',\r\n};\r\n//Surrogates\r\nfunction isSurrogate(cp) {\r\n    return cp >= 55296 && cp <= 57343;\r\n}\r\nfunction isSurrogatePair(cp) {\r\n    return cp >= 56320 && cp <= 57343;\r\n}\r\nfunction getSurrogatePairCodePoint(cp1, cp2) {\r\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\r\n}\r\n//NOTE: excluding NULL and ASCII whitespace\r\nfunction isControlCodePoint(cp) {\r\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\r\n        (cp >= 0x7f && cp <= 0x9f));\r\n}\r\nfunction isUndefinedCodePoint(cp) {\r\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\r\n}\r\n\r\nvar ERR;\r\n(function (ERR) {\r\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\r\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\r\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\r\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\r\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\r\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\r\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\r\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\r\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\r\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\r\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\r\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\r\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\r\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\r\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\r\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\r\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\r\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\r\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\r\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\r\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\r\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\r\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\r\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\r\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\r\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\r\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\r\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\r\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\r\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\r\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\r\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\r\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\r\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\r\n    ERR[\"nestedComment\"] = \"nested-comment\";\r\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\r\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\r\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\r\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\r\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\r\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\r\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\r\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\r\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\r\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\r\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\r\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\r\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\r\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\r\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\r\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\r\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\r\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\r\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\r\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\r\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\r\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\r\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\r\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\r\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\r\n})(ERR = ERR || (ERR = {}));\r\n\r\n//Const\r\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\r\n//Preprocessor\r\n//NOTE: HTML input preprocessing\r\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\r\nclass Preprocessor {\r\n    constructor(handler) {\r\n        this.handler = handler;\r\n        this.html = '';\r\n        this.pos = -1;\r\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\r\n        this.lastGapPos = -2;\r\n        this.gapStack = [];\r\n        this.skipNextNewLine = false;\r\n        this.lastChunkWritten = false;\r\n        this.endOfChunkHit = false;\r\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\r\n        this.isEol = false;\r\n        this.lineStartPos = 0;\r\n        this.droppedBufferSize = 0;\r\n        this.line = 1;\r\n        //NOTE: avoid reporting errors twice on advance/retreat\r\n        this.lastErrOffset = -1;\r\n    }\r\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\r\n    get col() {\r\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\r\n    }\r\n    get offset() {\r\n        return this.droppedBufferSize + this.pos;\r\n    }\r\n    getError(code) {\r\n        const { line, col, offset } = this;\r\n        return {\r\n            code,\r\n            startLine: line,\r\n            endLine: line,\r\n            startCol: col,\r\n            endCol: col,\r\n            startOffset: offset,\r\n            endOffset: offset,\r\n        };\r\n    }\r\n    _err(code) {\r\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\r\n            this.lastErrOffset = this.offset;\r\n            this.handler.onParseError(this.getError(code));\r\n        }\r\n    }\r\n    _addGap() {\r\n        this.gapStack.push(this.lastGapPos);\r\n        this.lastGapPos = this.pos;\r\n    }\r\n    _processSurrogate(cp) {\r\n        //NOTE: try to peek a surrogate pair\r\n        if (this.pos !== this.html.length - 1) {\r\n            const nextCp = this.html.charCodeAt(this.pos + 1);\r\n            if (isSurrogatePair(nextCp)) {\r\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\r\n                this.pos++;\r\n                //NOTE: add a gap that should be avoided during retreat\r\n                this._addGap();\r\n                return getSurrogatePairCodePoint(cp, nextCp);\r\n            }\r\n        }\r\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\r\n        else if (!this.lastChunkWritten) {\r\n            this.endOfChunkHit = true;\r\n            return CODE_POINTS.EOF;\r\n        }\r\n        //NOTE: isolated surrogate\r\n        this._err(ERR.surrogateInInputStream);\r\n        return cp;\r\n    }\r\n    willDropParsedChunk() {\r\n        return this.pos > this.bufferWaterline;\r\n    }\r\n    dropParsedChunk() {\r\n        if (this.willDropParsedChunk()) {\r\n            this.html = this.html.substring(this.pos);\r\n            this.lineStartPos -= this.pos;\r\n            this.droppedBufferSize += this.pos;\r\n            this.pos = 0;\r\n            this.lastGapPos = -2;\r\n            this.gapStack.length = 0;\r\n        }\r\n    }\r\n    write(chunk, isLastChunk) {\r\n        if (this.html.length > 0) {\r\n            this.html += chunk;\r\n        }\r\n        else {\r\n            this.html = chunk;\r\n        }\r\n        this.endOfChunkHit = false;\r\n        this.lastChunkWritten = isLastChunk;\r\n    }\r\n    insertHtmlAtCurrentPos(chunk) {\r\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\r\n        this.endOfChunkHit = false;\r\n    }\r\n    startsWith(pattern, caseSensitive) {\r\n        // Check if our buffer has enough characters\r\n        if (this.pos + pattern.length > this.html.length) {\r\n            this.endOfChunkHit = !this.lastChunkWritten;\r\n            return false;\r\n        }\r\n        if (caseSensitive) {\r\n            return this.html.startsWith(pattern, this.pos);\r\n        }\r\n        for (let i = 0; i < pattern.length; i++) {\r\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\r\n            if (cp !== pattern.charCodeAt(i)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    peek(offset) {\r\n        const pos = this.pos + offset;\r\n        if (pos >= this.html.length) {\r\n            this.endOfChunkHit = !this.lastChunkWritten;\r\n            return CODE_POINTS.EOF;\r\n        }\r\n        const code = this.html.charCodeAt(pos);\r\n        return code === CODE_POINTS.CARRIAGE_RETURN ? CODE_POINTS.LINE_FEED : code;\r\n    }\r\n    advance() {\r\n        this.pos++;\r\n        //NOTE: LF should be in the last column of the line\r\n        if (this.isEol) {\r\n            this.isEol = false;\r\n            this.line++;\r\n            this.lineStartPos = this.pos;\r\n        }\r\n        if (this.pos >= this.html.length) {\r\n            this.endOfChunkHit = !this.lastChunkWritten;\r\n            return CODE_POINTS.EOF;\r\n        }\r\n        let cp = this.html.charCodeAt(this.pos);\r\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\r\n        if (cp === CODE_POINTS.CARRIAGE_RETURN) {\r\n            this.isEol = true;\r\n            this.skipNextNewLine = true;\r\n            return CODE_POINTS.LINE_FEED;\r\n        }\r\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\r\n        //must be ignored.\r\n        if (cp === CODE_POINTS.LINE_FEED) {\r\n            this.isEol = true;\r\n            if (this.skipNextNewLine) {\r\n                // `line` will be bumped again in the recursive call.\r\n                this.line--;\r\n                this.skipNextNewLine = false;\r\n                this._addGap();\r\n                return this.advance();\r\n            }\r\n        }\r\n        this.skipNextNewLine = false;\r\n        if (isSurrogate(cp)) {\r\n            cp = this._processSurrogate(cp);\r\n        }\r\n        //OPTIMIZATION: first check if code point is in the common allowed\r\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\r\n        //before going into detailed performance cost validation.\r\n        const isCommonValidRange = this.handler.onParseError === null ||\r\n            (cp > 0x1f && cp < 0x7f) ||\r\n            cp === CODE_POINTS.LINE_FEED ||\r\n            cp === CODE_POINTS.CARRIAGE_RETURN ||\r\n            (cp > 0x9f && cp < 64976);\r\n        if (!isCommonValidRange) {\r\n            this._checkForProblematicCharacters(cp);\r\n        }\r\n        return cp;\r\n    }\r\n    _checkForProblematicCharacters(cp) {\r\n        if (isControlCodePoint(cp)) {\r\n            this._err(ERR.controlCharacterInInputStream);\r\n        }\r\n        else if (isUndefinedCodePoint(cp)) {\r\n            this._err(ERR.noncharacterInInputStream);\r\n        }\r\n    }\r\n    retreat(count) {\r\n        this.pos -= count;\r\n        while (this.pos < this.lastGapPos) {\r\n            this.lastGapPos = this.gapStack.pop();\r\n            this.pos--;\r\n        }\r\n        this.isEol = false;\r\n    }\r\n}\r\n\r\nvar TokenType;\r\n(function (TokenType) {\r\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\r\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\r\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\r\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\r\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\r\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\r\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\r\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\r\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\r\n})(TokenType = TokenType || (TokenType = {}));\r\nfunction getTokenAttr(token, attrName) {\r\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\r\n        if (token.attrs[i].name === attrName) {\r\n            return token.attrs[i].value;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n// Generated using scripts/write-decode-map.ts\r\nvar htmlDecodeTree = new Uint16Array(\r\n// prettier-ignore\r\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\r\n    .split(\"\")\r\n    .map((c) => c.charCodeAt(0)));\r\n\r\n// Generated using scripts/write-decode-map.ts\r\nnew Uint16Array(\r\n// prettier-ignore\r\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\r\n    .split(\"\")\r\n    .map((c) => c.charCodeAt(0)));\r\n\r\nvar CharCodes;\r\n(function (CharCodes) {\r\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\r\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\r\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\r\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\r\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\r\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\r\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\r\n    /** Bit that needs to be set to convert an upper case ASCII character to lower case */\r\n    CharCodes[CharCodes[\"To_LOWER_BIT\"] = 32] = \"To_LOWER_BIT\";\r\n})(CharCodes || (CharCodes = {}));\r\nvar BinTrieFlags;\r\n(function (BinTrieFlags) {\r\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\r\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\r\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\r\n})(BinTrieFlags || (BinTrieFlags = {}));\r\nfunction determineBranch(decodeTree, current, nodeIdx, char) {\r\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\r\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\r\n    // Case 1: Single branch encoded in jump offset\r\n    if (branchCount === 0) {\r\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\r\n    }\r\n    // Case 2: Multiple branches encoded in jump table\r\n    if (jumpOffset) {\r\n        const value = char - jumpOffset;\r\n        return value < 0 || value >= branchCount\r\n            ? -1\r\n            : decodeTree[nodeIdx + value] - 1;\r\n    }\r\n    // Case 3: Multiple branches encoded in dictionary\r\n    // Binary search for the character.\r\n    let lo = nodeIdx;\r\n    let hi = lo + branchCount - 1;\r\n    while (lo <= hi) {\r\n        const mid = (lo + hi) >>> 1;\r\n        const midVal = decodeTree[mid];\r\n        if (midVal < char) {\r\n            lo = mid + 1;\r\n        }\r\n        else if (midVal > char) {\r\n            hi = mid - 1;\r\n        }\r\n        else {\r\n            return decodeTree[mid + branchCount];\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\n/** All valid namespaces in HTML. */\r\nvar NS;\r\n(function (NS) {\r\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\r\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\r\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\r\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\r\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\r\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\r\n})(NS = NS || (NS = {}));\r\nvar ATTRS;\r\n(function (ATTRS) {\r\n    ATTRS[\"TYPE\"] = \"type\";\r\n    ATTRS[\"ACTION\"] = \"action\";\r\n    ATTRS[\"ENCODING\"] = \"encoding\";\r\n    ATTRS[\"PROMPT\"] = \"prompt\";\r\n    ATTRS[\"NAME\"] = \"name\";\r\n    ATTRS[\"COLOR\"] = \"color\";\r\n    ATTRS[\"FACE\"] = \"face\";\r\n    ATTRS[\"SIZE\"] = \"size\";\r\n})(ATTRS = ATTRS || (ATTRS = {}));\r\n/**\r\n * The mode of the document.\r\n *\r\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\r\n */\r\nvar DOCUMENT_MODE;\r\n(function (DOCUMENT_MODE) {\r\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\r\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\r\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\r\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\r\nvar TAG_NAMES;\r\n(function (TAG_NAMES) {\r\n    TAG_NAMES[\"A\"] = \"a\";\r\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\r\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\r\n    TAG_NAMES[\"APPLET\"] = \"applet\";\r\n    TAG_NAMES[\"AREA\"] = \"area\";\r\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\r\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\r\n    TAG_NAMES[\"B\"] = \"b\";\r\n    TAG_NAMES[\"BASE\"] = \"base\";\r\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\r\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\r\n    TAG_NAMES[\"BIG\"] = \"big\";\r\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\r\n    TAG_NAMES[\"BODY\"] = \"body\";\r\n    TAG_NAMES[\"BR\"] = \"br\";\r\n    TAG_NAMES[\"BUTTON\"] = \"button\";\r\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\r\n    TAG_NAMES[\"CENTER\"] = \"center\";\r\n    TAG_NAMES[\"CODE\"] = \"code\";\r\n    TAG_NAMES[\"COL\"] = \"col\";\r\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\r\n    TAG_NAMES[\"DD\"] = \"dd\";\r\n    TAG_NAMES[\"DESC\"] = \"desc\";\r\n    TAG_NAMES[\"DETAILS\"] = \"details\";\r\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\r\n    TAG_NAMES[\"DIR\"] = \"dir\";\r\n    TAG_NAMES[\"DIV\"] = \"div\";\r\n    TAG_NAMES[\"DL\"] = \"dl\";\r\n    TAG_NAMES[\"DT\"] = \"dt\";\r\n    TAG_NAMES[\"EM\"] = \"em\";\r\n    TAG_NAMES[\"EMBED\"] = \"embed\";\r\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\r\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\r\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\r\n    TAG_NAMES[\"FONT\"] = \"font\";\r\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\r\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\r\n    TAG_NAMES[\"FORM\"] = \"form\";\r\n    TAG_NAMES[\"FRAME\"] = \"frame\";\r\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\r\n    TAG_NAMES[\"H1\"] = \"h1\";\r\n    TAG_NAMES[\"H2\"] = \"h2\";\r\n    TAG_NAMES[\"H3\"] = \"h3\";\r\n    TAG_NAMES[\"H4\"] = \"h4\";\r\n    TAG_NAMES[\"H5\"] = \"h5\";\r\n    TAG_NAMES[\"H6\"] = \"h6\";\r\n    TAG_NAMES[\"HEAD\"] = \"head\";\r\n    TAG_NAMES[\"HEADER\"] = \"header\";\r\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\r\n    TAG_NAMES[\"HR\"] = \"hr\";\r\n    TAG_NAMES[\"HTML\"] = \"html\";\r\n    TAG_NAMES[\"I\"] = \"i\";\r\n    TAG_NAMES[\"IMG\"] = \"img\";\r\n    TAG_NAMES[\"IMAGE\"] = \"image\";\r\n    TAG_NAMES[\"INPUT\"] = \"input\";\r\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\r\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\r\n    TAG_NAMES[\"LABEL\"] = \"label\";\r\n    TAG_NAMES[\"LI\"] = \"li\";\r\n    TAG_NAMES[\"LINK\"] = \"link\";\r\n    TAG_NAMES[\"LISTING\"] = \"listing\";\r\n    TAG_NAMES[\"MAIN\"] = \"main\";\r\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\r\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\r\n    TAG_NAMES[\"MATH\"] = \"math\";\r\n    TAG_NAMES[\"MENU\"] = \"menu\";\r\n    TAG_NAMES[\"META\"] = \"meta\";\r\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\r\n    TAG_NAMES[\"MI\"] = \"mi\";\r\n    TAG_NAMES[\"MO\"] = \"mo\";\r\n    TAG_NAMES[\"MN\"] = \"mn\";\r\n    TAG_NAMES[\"MS\"] = \"ms\";\r\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\r\n    TAG_NAMES[\"NAV\"] = \"nav\";\r\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\r\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\r\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\r\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\r\n    TAG_NAMES[\"OBJECT\"] = \"object\";\r\n    TAG_NAMES[\"OL\"] = \"ol\";\r\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\r\n    TAG_NAMES[\"OPTION\"] = \"option\";\r\n    TAG_NAMES[\"P\"] = \"p\";\r\n    TAG_NAMES[\"PARAM\"] = \"param\";\r\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\r\n    TAG_NAMES[\"PRE\"] = \"pre\";\r\n    TAG_NAMES[\"RB\"] = \"rb\";\r\n    TAG_NAMES[\"RP\"] = \"rp\";\r\n    TAG_NAMES[\"RT\"] = \"rt\";\r\n    TAG_NAMES[\"RTC\"] = \"rtc\";\r\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\r\n    TAG_NAMES[\"S\"] = \"s\";\r\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\r\n    TAG_NAMES[\"SECTION\"] = \"section\";\r\n    TAG_NAMES[\"SELECT\"] = \"select\";\r\n    TAG_NAMES[\"SOURCE\"] = \"source\";\r\n    TAG_NAMES[\"SMALL\"] = \"small\";\r\n    TAG_NAMES[\"SPAN\"] = \"span\";\r\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\r\n    TAG_NAMES[\"STRONG\"] = \"strong\";\r\n    TAG_NAMES[\"STYLE\"] = \"style\";\r\n    TAG_NAMES[\"SUB\"] = \"sub\";\r\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\r\n    TAG_NAMES[\"SUP\"] = \"sup\";\r\n    TAG_NAMES[\"TABLE\"] = \"table\";\r\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\r\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\r\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\r\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\r\n    TAG_NAMES[\"TD\"] = \"td\";\r\n    TAG_NAMES[\"TH\"] = \"th\";\r\n    TAG_NAMES[\"THEAD\"] = \"thead\";\r\n    TAG_NAMES[\"TITLE\"] = \"title\";\r\n    TAG_NAMES[\"TR\"] = \"tr\";\r\n    TAG_NAMES[\"TRACK\"] = \"track\";\r\n    TAG_NAMES[\"TT\"] = \"tt\";\r\n    TAG_NAMES[\"U\"] = \"u\";\r\n    TAG_NAMES[\"UL\"] = \"ul\";\r\n    TAG_NAMES[\"SVG\"] = \"svg\";\r\n    TAG_NAMES[\"VAR\"] = \"var\";\r\n    TAG_NAMES[\"WBR\"] = \"wbr\";\r\n    TAG_NAMES[\"XMP\"] = \"xmp\";\r\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\r\n/**\r\n * Tag IDs are numeric IDs for known tag names.\r\n *\r\n * We use tag IDs to improve the performance of tag name comparisons.\r\n */\r\nvar TAG_ID;\r\n(function (TAG_ID) {\r\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\r\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\r\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\r\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\r\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\r\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\r\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\r\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\r\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\r\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\r\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\r\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\r\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\r\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\r\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\r\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\r\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\r\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\r\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\r\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\r\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\r\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\r\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\r\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\r\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\r\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\r\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\r\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\r\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\r\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\r\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\r\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\r\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\r\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\r\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\r\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\r\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\r\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\r\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\r\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\r\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\r\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\r\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\r\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\r\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\r\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\r\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\r\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\r\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\r\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\r\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\r\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\r\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\r\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\r\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\r\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\r\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\r\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\r\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\r\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\r\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\r\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\r\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\r\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\r\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\r\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\r\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\r\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\r\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\r\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\r\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\r\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\r\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\r\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\r\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\r\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\r\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\r\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\r\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\r\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\r\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\r\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\r\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\r\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\r\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\r\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\r\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\r\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\r\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\r\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\r\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\r\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\r\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\r\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\r\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\r\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\r\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\r\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\r\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\r\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\r\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\r\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\r\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\r\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\r\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\r\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\r\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\r\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\r\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\r\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\r\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\r\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\r\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\r\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\r\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\r\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\r\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\r\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\r\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\r\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\r\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\r\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\r\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\r\nconst TAG_NAME_TO_ID = new Map([\r\n    [TAG_NAMES.A, TAG_ID.A],\r\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\r\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\r\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\r\n    [TAG_NAMES.AREA, TAG_ID.AREA],\r\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\r\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\r\n    [TAG_NAMES.B, TAG_ID.B],\r\n    [TAG_NAMES.BASE, TAG_ID.BASE],\r\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\r\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\r\n    [TAG_NAMES.BIG, TAG_ID.BIG],\r\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\r\n    [TAG_NAMES.BODY, TAG_ID.BODY],\r\n    [TAG_NAMES.BR, TAG_ID.BR],\r\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\r\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\r\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\r\n    [TAG_NAMES.CODE, TAG_ID.CODE],\r\n    [TAG_NAMES.COL, TAG_ID.COL],\r\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\r\n    [TAG_NAMES.DD, TAG_ID.DD],\r\n    [TAG_NAMES.DESC, TAG_ID.DESC],\r\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\r\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\r\n    [TAG_NAMES.DIR, TAG_ID.DIR],\r\n    [TAG_NAMES.DIV, TAG_ID.DIV],\r\n    [TAG_NAMES.DL, TAG_ID.DL],\r\n    [TAG_NAMES.DT, TAG_ID.DT],\r\n    [TAG_NAMES.EM, TAG_ID.EM],\r\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\r\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\r\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\r\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\r\n    [TAG_NAMES.FONT, TAG_ID.FONT],\r\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\r\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\r\n    [TAG_NAMES.FORM, TAG_ID.FORM],\r\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\r\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\r\n    [TAG_NAMES.H1, TAG_ID.H1],\r\n    [TAG_NAMES.H2, TAG_ID.H2],\r\n    [TAG_NAMES.H3, TAG_ID.H3],\r\n    [TAG_NAMES.H4, TAG_ID.H4],\r\n    [TAG_NAMES.H5, TAG_ID.H5],\r\n    [TAG_NAMES.H6, TAG_ID.H6],\r\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\r\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\r\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\r\n    [TAG_NAMES.HR, TAG_ID.HR],\r\n    [TAG_NAMES.HTML, TAG_ID.HTML],\r\n    [TAG_NAMES.I, TAG_ID.I],\r\n    [TAG_NAMES.IMG, TAG_ID.IMG],\r\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\r\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\r\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\r\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\r\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\r\n    [TAG_NAMES.LI, TAG_ID.LI],\r\n    [TAG_NAMES.LINK, TAG_ID.LINK],\r\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\r\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\r\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\r\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\r\n    [TAG_NAMES.MATH, TAG_ID.MATH],\r\n    [TAG_NAMES.MENU, TAG_ID.MENU],\r\n    [TAG_NAMES.META, TAG_ID.META],\r\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\r\n    [TAG_NAMES.MI, TAG_ID.MI],\r\n    [TAG_NAMES.MO, TAG_ID.MO],\r\n    [TAG_NAMES.MN, TAG_ID.MN],\r\n    [TAG_NAMES.MS, TAG_ID.MS],\r\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\r\n    [TAG_NAMES.NAV, TAG_ID.NAV],\r\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\r\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\r\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\r\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\r\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\r\n    [TAG_NAMES.OL, TAG_ID.OL],\r\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\r\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\r\n    [TAG_NAMES.P, TAG_ID.P],\r\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\r\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\r\n    [TAG_NAMES.PRE, TAG_ID.PRE],\r\n    [TAG_NAMES.RB, TAG_ID.RB],\r\n    [TAG_NAMES.RP, TAG_ID.RP],\r\n    [TAG_NAMES.RT, TAG_ID.RT],\r\n    [TAG_NAMES.RTC, TAG_ID.RTC],\r\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\r\n    [TAG_NAMES.S, TAG_ID.S],\r\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\r\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\r\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\r\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\r\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\r\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\r\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\r\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\r\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\r\n    [TAG_NAMES.SUB, TAG_ID.SUB],\r\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\r\n    [TAG_NAMES.SUP, TAG_ID.SUP],\r\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\r\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\r\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\r\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\r\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\r\n    [TAG_NAMES.TD, TAG_ID.TD],\r\n    [TAG_NAMES.TH, TAG_ID.TH],\r\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\r\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\r\n    [TAG_NAMES.TR, TAG_ID.TR],\r\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\r\n    [TAG_NAMES.TT, TAG_ID.TT],\r\n    [TAG_NAMES.U, TAG_ID.U],\r\n    [TAG_NAMES.UL, TAG_ID.UL],\r\n    [TAG_NAMES.SVG, TAG_ID.SVG],\r\n    [TAG_NAMES.VAR, TAG_ID.VAR],\r\n    [TAG_NAMES.WBR, TAG_ID.WBR],\r\n    [TAG_NAMES.XMP, TAG_ID.XMP],\r\n]);\r\nfunction getTagID(tagName) {\r\n    var _a;\r\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\r\n}\r\nconst $ = TAG_ID;\r\nconst SPECIAL_ELEMENTS = {\r\n    [NS.HTML]: new Set([\r\n        $.ADDRESS,\r\n        $.APPLET,\r\n        $.AREA,\r\n        $.ARTICLE,\r\n        $.ASIDE,\r\n        $.BASE,\r\n        $.BASEFONT,\r\n        $.BGSOUND,\r\n        $.BLOCKQUOTE,\r\n        $.BODY,\r\n        $.BR,\r\n        $.BUTTON,\r\n        $.CAPTION,\r\n        $.CENTER,\r\n        $.COL,\r\n        $.COLGROUP,\r\n        $.DD,\r\n        $.DETAILS,\r\n        $.DIR,\r\n        $.DIV,\r\n        $.DL,\r\n        $.DT,\r\n        $.EMBED,\r\n        $.FIELDSET,\r\n        $.FIGCAPTION,\r\n        $.FIGURE,\r\n        $.FOOTER,\r\n        $.FORM,\r\n        $.FRAME,\r\n        $.FRAMESET,\r\n        $.H1,\r\n        $.H2,\r\n        $.H3,\r\n        $.H4,\r\n        $.H5,\r\n        $.H6,\r\n        $.HEAD,\r\n        $.HEADER,\r\n        $.HGROUP,\r\n        $.HR,\r\n        $.HTML,\r\n        $.IFRAME,\r\n        $.IMG,\r\n        $.INPUT,\r\n        $.LI,\r\n        $.LINK,\r\n        $.LISTING,\r\n        $.MAIN,\r\n        $.MARQUEE,\r\n        $.MENU,\r\n        $.META,\r\n        $.NAV,\r\n        $.NOEMBED,\r\n        $.NOFRAMES,\r\n        $.NOSCRIPT,\r\n        $.OBJECT,\r\n        $.OL,\r\n        $.P,\r\n        $.PARAM,\r\n        $.PLAINTEXT,\r\n        $.PRE,\r\n        $.SCRIPT,\r\n        $.SECTION,\r\n        $.SELECT,\r\n        $.SOURCE,\r\n        $.STYLE,\r\n        $.SUMMARY,\r\n        $.TABLE,\r\n        $.TBODY,\r\n        $.TD,\r\n        $.TEMPLATE,\r\n        $.TEXTAREA,\r\n        $.TFOOT,\r\n        $.TH,\r\n        $.THEAD,\r\n        $.TITLE,\r\n        $.TR,\r\n        $.TRACK,\r\n        $.UL,\r\n        $.WBR,\r\n        $.XMP,\r\n    ]),\r\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\r\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\r\n    [NS.XLINK]: new Set(),\r\n    [NS.XML]: new Set(),\r\n    [NS.XMLNS]: new Set(),\r\n};\r\nfunction isNumberedHeader(tn) {\r\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\r\n}\r\n\r\n//C1 Unicode control character reference replacements\r\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\r\n    [0x80, 8364],\r\n    [0x82, 8218],\r\n    [0x83, 402],\r\n    [0x84, 8222],\r\n    [0x85, 8230],\r\n    [0x86, 8224],\r\n    [0x87, 8225],\r\n    [0x88, 710],\r\n    [0x89, 8240],\r\n    [0x8a, 352],\r\n    [0x8b, 8249],\r\n    [0x8c, 338],\r\n    [0x8e, 381],\r\n    [0x91, 8216],\r\n    [0x92, 8217],\r\n    [0x93, 8220],\r\n    [0x94, 8221],\r\n    [0x95, 8226],\r\n    [0x96, 8211],\r\n    [0x97, 8212],\r\n    [0x98, 732],\r\n    [0x99, 8482],\r\n    [0x9a, 353],\r\n    [0x9b, 8250],\r\n    [0x9c, 339],\r\n    [0x9e, 382],\r\n    [0x9f, 376],\r\n]);\r\n//States\r\nvar State;\r\n(function (State) {\r\n    State[State[\"DATA\"] = 0] = \"DATA\";\r\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\r\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\r\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\r\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\r\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\r\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\r\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\r\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\r\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\r\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\r\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\r\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\r\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\r\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\r\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\r\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\r\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\r\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\r\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\r\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\r\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\r\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\r\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\r\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\r\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\r\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\r\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\r\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\r\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\r\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\r\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\r\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\r\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\r\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\r\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\r\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\r\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\r\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\r\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\r\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\r\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\r\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\r\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\r\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\r\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\r\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\r\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\r\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\r\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\r\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\r\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\r\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\r\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\r\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\r\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\r\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\r\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\r\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\r\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\r\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\r\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\r\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\r\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\r\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\r\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\r\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\r\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\r\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\r\n})(State || (State = {}));\r\n//Tokenizer initial states for different modes\r\nconst TokenizerMode = {\r\n    DATA: State.DATA,\r\n    RCDATA: State.RCDATA,\r\n    RAWTEXT: State.RAWTEXT,\r\n    SCRIPT_DATA: State.SCRIPT_DATA,\r\n    PLAINTEXT: State.PLAINTEXT,\r\n    CDATA_SECTION: State.CDATA_SECTION,\r\n};\r\n//Utils\r\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\r\n//this functions if they will be situated in another module due to context switch.\r\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\r\nfunction isAsciiDigit(cp) {\r\n    return cp >= CODE_POINTS.DIGIT_0 && cp <= CODE_POINTS.DIGIT_9;\r\n}\r\nfunction isAsciiUpper(cp) {\r\n    return cp >= CODE_POINTS.LATIN_CAPITAL_A && cp <= CODE_POINTS.LATIN_CAPITAL_Z;\r\n}\r\nfunction isAsciiLower(cp) {\r\n    return cp >= CODE_POINTS.LATIN_SMALL_A && cp <= CODE_POINTS.LATIN_SMALL_Z;\r\n}\r\nfunction isAsciiLetter(cp) {\r\n    return isAsciiLower(cp) || isAsciiUpper(cp);\r\n}\r\nfunction isAsciiAlphaNumeric(cp) {\r\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\r\n}\r\nfunction isAsciiUpperHexDigit(cp) {\r\n    return cp >= CODE_POINTS.LATIN_CAPITAL_A && cp <= CODE_POINTS.LATIN_CAPITAL_F;\r\n}\r\nfunction isAsciiLowerHexDigit(cp) {\r\n    return cp >= CODE_POINTS.LATIN_SMALL_A && cp <= CODE_POINTS.LATIN_SMALL_F;\r\n}\r\nfunction isAsciiHexDigit(cp) {\r\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\r\n}\r\nfunction toAsciiLower(cp) {\r\n    return cp + 32;\r\n}\r\nfunction isWhitespace(cp) {\r\n    return cp === CODE_POINTS.SPACE || cp === CODE_POINTS.LINE_FEED || cp === CODE_POINTS.TABULATION || cp === CODE_POINTS.FORM_FEED;\r\n}\r\nfunction isEntityInAttributeInvalidEnd(nextCp) {\r\n    return nextCp === CODE_POINTS.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\r\n}\r\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\r\n    return isWhitespace(cp) || cp === CODE_POINTS.SOLIDUS || cp === CODE_POINTS.GREATER_THAN_SIGN;\r\n}\r\n//Tokenizer\r\nclass Tokenizer {\r\n    constructor(options, handler) {\r\n        this.options = options;\r\n        this.handler = handler;\r\n        this.paused = false;\r\n        /** Ensures that the parsing loop isn't run multiple times at once. */\r\n        this.inLoop = false;\r\n        /**\r\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\r\n         * and that it is not an integration point for either MathML or HTML.\r\n         *\r\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\r\n         */\r\n        this.inForeignNode = false;\r\n        this.lastStartTagName = '';\r\n        this.active = false;\r\n        this.state = State.DATA;\r\n        this.returnState = State.DATA;\r\n        this.charRefCode = -1;\r\n        this.consumedAfterSnapshot = -1;\r\n        this.currentCharacterToken = null;\r\n        this.currentToken = null;\r\n        this.currentAttr = { name: '', value: '' };\r\n        this.preprocessor = new Preprocessor(handler);\r\n        this.currentLocation = this.getCurrentLocation(-1);\r\n    }\r\n    //Errors\r\n    _err(code) {\r\n        var _a, _b;\r\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\r\n    }\r\n    // NOTE: `offset` may never run across line boundaries.\r\n    getCurrentLocation(offset) {\r\n        if (!this.options.sourceCodeLocationInfo) {\r\n            return null;\r\n        }\r\n        return {\r\n            startLine: this.preprocessor.line,\r\n            startCol: this.preprocessor.col - offset,\r\n            startOffset: this.preprocessor.offset - offset,\r\n            endLine: -1,\r\n            endCol: -1,\r\n            endOffset: -1,\r\n        };\r\n    }\r\n    _runParsingLoop() {\r\n        if (this.inLoop)\r\n            return;\r\n        this.inLoop = true;\r\n        while (this.active && !this.paused) {\r\n            this.consumedAfterSnapshot = 0;\r\n            const cp = this._consume();\r\n            if (!this._ensureHibernation()) {\r\n                this._callState(cp);\r\n            }\r\n        }\r\n        this.inLoop = false;\r\n    }\r\n    //API\r\n    pause() {\r\n        this.paused = true;\r\n    }\r\n    resume(writeCallback) {\r\n        if (!this.paused) {\r\n            throw new Error('Parser was already resumed');\r\n        }\r\n        this.paused = false;\r\n        // Necessary for synchronous resume.\r\n        if (this.inLoop)\r\n            return;\r\n        this._runParsingLoop();\r\n        if (!this.paused) {\r\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\r\n        }\r\n    }\r\n    write(chunk, isLastChunk, writeCallback) {\r\n        this.active = true;\r\n        this.preprocessor.write(chunk, isLastChunk);\r\n        this._runParsingLoop();\r\n        if (!this.paused) {\r\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\r\n        }\r\n    }\r\n    insertHtmlAtCurrentPos(chunk) {\r\n        this.active = true;\r\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\r\n        this._runParsingLoop();\r\n    }\r\n    //Hibernation\r\n    _ensureHibernation() {\r\n        if (this.preprocessor.endOfChunkHit) {\r\n            this._unconsume(this.consumedAfterSnapshot);\r\n            this.active = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    //Consumption\r\n    _consume() {\r\n        this.consumedAfterSnapshot++;\r\n        return this.preprocessor.advance();\r\n    }\r\n    _unconsume(count) {\r\n        this.consumedAfterSnapshot -= count;\r\n        this.preprocessor.retreat(count);\r\n    }\r\n    _reconsumeInState(state, cp) {\r\n        this.state = state;\r\n        this._callState(cp);\r\n    }\r\n    _advanceBy(count) {\r\n        this.consumedAfterSnapshot += count;\r\n        for (let i = 0; i < count; i++) {\r\n            this.preprocessor.advance();\r\n        }\r\n    }\r\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\r\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\r\n            // We will already have consumed one character before calling this method.\r\n            this._advanceBy(pattern.length - 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    //Token creation\r\n    _createStartTagToken() {\r\n        this.currentToken = {\r\n            type: TokenType.START_TAG,\r\n            tagName: '',\r\n            tagID: TAG_ID.UNKNOWN,\r\n            selfClosing: false,\r\n            ackSelfClosing: false,\r\n            attrs: [],\r\n            location: this.getCurrentLocation(1),\r\n        };\r\n    }\r\n    _createEndTagToken() {\r\n        this.currentToken = {\r\n            type: TokenType.END_TAG,\r\n            tagName: '',\r\n            tagID: TAG_ID.UNKNOWN,\r\n            selfClosing: false,\r\n            ackSelfClosing: false,\r\n            attrs: [],\r\n            location: this.getCurrentLocation(2),\r\n        };\r\n    }\r\n    _createCommentToken(offset) {\r\n        this.currentToken = {\r\n            type: TokenType.COMMENT,\r\n            data: '',\r\n            location: this.getCurrentLocation(offset),\r\n        };\r\n    }\r\n    _createDoctypeToken(initialName) {\r\n        this.currentToken = {\r\n            type: TokenType.DOCTYPE,\r\n            name: initialName,\r\n            forceQuirks: false,\r\n            publicId: null,\r\n            systemId: null,\r\n            location: this.currentLocation,\r\n        };\r\n    }\r\n    _createCharacterToken(type, chars) {\r\n        this.currentCharacterToken = {\r\n            type,\r\n            chars,\r\n            location: this.currentLocation,\r\n        };\r\n    }\r\n    //Tag attributes\r\n    _createAttr(attrNameFirstCh) {\r\n        this.currentAttr = {\r\n            name: attrNameFirstCh,\r\n            value: '',\r\n        };\r\n        this.currentLocation = this.getCurrentLocation(0);\r\n    }\r\n    _leaveAttrName() {\r\n        var _a;\r\n        var _b;\r\n        const token = this.currentToken;\r\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\r\n            token.attrs.push(this.currentAttr);\r\n            if (token.location && this.currentLocation) {\r\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\r\n                attrLocations[this.currentAttr.name] = this.currentLocation;\r\n                // Set end location\r\n                this._leaveAttrValue();\r\n            }\r\n        }\r\n        else {\r\n            this._err(ERR.duplicateAttribute);\r\n        }\r\n    }\r\n    _leaveAttrValue() {\r\n        if (this.currentLocation) {\r\n            this.currentLocation.endLine = this.preprocessor.line;\r\n            this.currentLocation.endCol = this.preprocessor.col;\r\n            this.currentLocation.endOffset = this.preprocessor.offset;\r\n        }\r\n    }\r\n    //Token emission\r\n    prepareToken(ct) {\r\n        this._emitCurrentCharacterToken(ct.location);\r\n        this.currentToken = null;\r\n        if (ct.location) {\r\n            ct.location.endLine = this.preprocessor.line;\r\n            ct.location.endCol = this.preprocessor.col + 1;\r\n            ct.location.endOffset = this.preprocessor.offset + 1;\r\n        }\r\n        this.currentLocation = this.getCurrentLocation(-1);\r\n    }\r\n    emitCurrentTagToken() {\r\n        const ct = this.currentToken;\r\n        this.prepareToken(ct);\r\n        ct.tagID = getTagID(ct.tagName);\r\n        if (ct.type === TokenType.START_TAG) {\r\n            this.lastStartTagName = ct.tagName;\r\n            this.handler.onStartTag(ct);\r\n        }\r\n        else {\r\n            if (ct.attrs.length > 0) {\r\n                this._err(ERR.endTagWithAttributes);\r\n            }\r\n            if (ct.selfClosing) {\r\n                this._err(ERR.endTagWithTrailingSolidus);\r\n            }\r\n            this.handler.onEndTag(ct);\r\n        }\r\n        this.preprocessor.dropParsedChunk();\r\n    }\r\n    emitCurrentComment(ct) {\r\n        this.prepareToken(ct);\r\n        this.handler.onComment(ct);\r\n        this.preprocessor.dropParsedChunk();\r\n    }\r\n    emitCurrentDoctype(ct) {\r\n        this.prepareToken(ct);\r\n        this.handler.onDoctype(ct);\r\n        this.preprocessor.dropParsedChunk();\r\n    }\r\n    _emitCurrentCharacterToken(nextLocation) {\r\n        if (this.currentCharacterToken) {\r\n            //NOTE: if we have a pending character token, make it's end location equal to the\r\n            //current token's start location.\r\n            if (nextLocation && this.currentCharacterToken.location) {\r\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\r\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\r\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\r\n            }\r\n            switch (this.currentCharacterToken.type) {\r\n                case TokenType.CHARACTER: {\r\n                    this.handler.onCharacter(this.currentCharacterToken);\r\n                    break;\r\n                }\r\n                case TokenType.NULL_CHARACTER: {\r\n                    this.handler.onNullCharacter(this.currentCharacterToken);\r\n                    break;\r\n                }\r\n                case TokenType.WHITESPACE_CHARACTER: {\r\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\r\n                    break;\r\n                }\r\n            }\r\n            this.currentCharacterToken = null;\r\n        }\r\n    }\r\n    _emitEOFToken() {\r\n        const location = this.getCurrentLocation(0);\r\n        if (location) {\r\n            location.endLine = location.startLine;\r\n            location.endCol = location.startCol;\r\n            location.endOffset = location.startOffset;\r\n        }\r\n        this._emitCurrentCharacterToken(location);\r\n        this.handler.onEof({ type: TokenType.EOF, location });\r\n        this.active = false;\r\n    }\r\n    //Characters emission\r\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\r\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\r\n    //If we have a sequence of characters that belong to the same group, the parser can process it\r\n    //as a single solid character token.\r\n    //So, there are 3 types of character tokens in parse5:\r\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\r\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\r\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\r\n    _appendCharToCurrentCharacterToken(type, ch) {\r\n        if (this.currentCharacterToken) {\r\n            if (this.currentCharacterToken.type !== type) {\r\n                this.currentLocation = this.getCurrentLocation(0);\r\n                this._emitCurrentCharacterToken(this.currentLocation);\r\n                this.preprocessor.dropParsedChunk();\r\n            }\r\n            else {\r\n                this.currentCharacterToken.chars += ch;\r\n                return;\r\n            }\r\n        }\r\n        this._createCharacterToken(type, ch);\r\n    }\r\n    _emitCodePoint(cp) {\r\n        const type = isWhitespace(cp)\r\n            ? TokenType.WHITESPACE_CHARACTER\r\n            : cp === CODE_POINTS.NULL\r\n                ? TokenType.NULL_CHARACTER\r\n                : TokenType.CHARACTER;\r\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\r\n    }\r\n    //NOTE: used when we emit characters explicitly.\r\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\r\n    _emitChars(ch) {\r\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\r\n    }\r\n    // Character reference helpers\r\n    _matchNamedCharacterReference(cp) {\r\n        let result = null;\r\n        let excess = 0;\r\n        let withoutSemicolon = false;\r\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\r\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\r\n            if (i < 0)\r\n                break;\r\n            excess += 1;\r\n            current = htmlDecodeTree[i];\r\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\r\n            // If the branch is a value, store it and continue\r\n            if (masked) {\r\n                // The mask is the number of bytes of the value, including the current byte.\r\n                const valueLength = (masked >> 14) - 1;\r\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\r\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\r\n                if (cp !== CODE_POINTS.SEMICOLON &&\r\n                    this._isCharacterReferenceInAttribute() &&\r\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\r\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\r\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\r\n                    result = [CODE_POINTS.AMPERSAND];\r\n                    // Skip over the value.\r\n                    i += valueLength;\r\n                }\r\n                else {\r\n                    // If this is a surrogate pair, consume the next two bytes.\r\n                    result =\r\n                        valueLength === 0\r\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\r\n                            : valueLength === 1\r\n                                ? [htmlDecodeTree[++i]]\r\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\r\n                    excess = 0;\r\n                    withoutSemicolon = cp !== CODE_POINTS.SEMICOLON;\r\n                }\r\n                if (valueLength === 0) {\r\n                    // If the value is zero-length, we're done.\r\n                    this._consume();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this._unconsume(excess);\r\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\r\n            this._err(ERR.missingSemicolonAfterCharacterReference);\r\n        }\r\n        // We want to emit the error above on the code point after the entity.\r\n        // We always consume one code point too many in the loop, and we wait to\r\n        // unconsume it until after the error is emitted.\r\n        this._unconsume(1);\r\n        return result;\r\n    }\r\n    _isCharacterReferenceInAttribute() {\r\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\r\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\r\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\r\n    }\r\n    _flushCodePointConsumedAsCharacterReference(cp) {\r\n        if (this._isCharacterReferenceInAttribute()) {\r\n            this.currentAttr.value += String.fromCodePoint(cp);\r\n        }\r\n        else {\r\n            this._emitCodePoint(cp);\r\n        }\r\n    }\r\n    // Calling states this way turns out to be much faster than any other approach.\r\n    _callState(cp) {\r\n        switch (this.state) {\r\n            case State.DATA: {\r\n                this._stateData(cp);\r\n                break;\r\n            }\r\n            case State.RCDATA: {\r\n                this._stateRcdata(cp);\r\n                break;\r\n            }\r\n            case State.RAWTEXT: {\r\n                this._stateRawtext(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA: {\r\n                this._stateScriptData(cp);\r\n                break;\r\n            }\r\n            case State.PLAINTEXT: {\r\n                this._statePlaintext(cp);\r\n                break;\r\n            }\r\n            case State.TAG_OPEN: {\r\n                this._stateTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.END_TAG_OPEN: {\r\n                this._stateEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.TAG_NAME: {\r\n                this._stateTagName(cp);\r\n                break;\r\n            }\r\n            case State.RCDATA_LESS_THAN_SIGN: {\r\n                this._stateRcdataLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.RCDATA_END_TAG_OPEN: {\r\n                this._stateRcdataEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.RCDATA_END_TAG_NAME: {\r\n                this._stateRcdataEndTagName(cp);\r\n                break;\r\n            }\r\n            case State.RAWTEXT_LESS_THAN_SIGN: {\r\n                this._stateRawtextLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.RAWTEXT_END_TAG_OPEN: {\r\n                this._stateRawtextEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.RAWTEXT_END_TAG_NAME: {\r\n                this._stateRawtextEndTagName(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\r\n                this._stateScriptDataLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\r\n                this._stateScriptDataEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_END_TAG_NAME: {\r\n                this._stateScriptDataEndTagName(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPE_START: {\r\n                this._stateScriptDataEscapeStart(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\r\n                this._stateScriptDataEscapeStartDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED: {\r\n                this._stateScriptDataEscaped(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\r\n                this._stateScriptDataEscapedDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\r\n                this._stateScriptDataEscapedDashDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\r\n                this._stateScriptDataEscapedLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\r\n                this._stateScriptDataEscapedEndTagOpen(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\r\n                this._stateScriptDataEscapedEndTagName(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\r\n                this._stateScriptDataDoubleEscapeStart(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\r\n                this._stateScriptDataDoubleEscaped(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\r\n                this._stateScriptDataDoubleEscapedDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\r\n                this._stateScriptDataDoubleEscapedDashDash(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\r\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\r\n                this._stateScriptDataDoubleEscapeEnd(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_ATTRIBUTE_NAME: {\r\n                this._stateBeforeAttributeName(cp);\r\n                break;\r\n            }\r\n            case State.ATTRIBUTE_NAME: {\r\n                this._stateAttributeName(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_ATTRIBUTE_NAME: {\r\n                this._stateAfterAttributeName(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_ATTRIBUTE_VALUE: {\r\n                this._stateBeforeAttributeValue(cp);\r\n                break;\r\n            }\r\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\r\n                this._stateAttributeValueDoubleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\r\n                this._stateAttributeValueSingleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\r\n                this._stateAttributeValueUnquoted(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\r\n                this._stateAfterAttributeValueQuoted(cp);\r\n                break;\r\n            }\r\n            case State.SELF_CLOSING_START_TAG: {\r\n                this._stateSelfClosingStartTag(cp);\r\n                break;\r\n            }\r\n            case State.BOGUS_COMMENT: {\r\n                this._stateBogusComment(cp);\r\n                break;\r\n            }\r\n            case State.MARKUP_DECLARATION_OPEN: {\r\n                this._stateMarkupDeclarationOpen(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_START: {\r\n                this._stateCommentStart(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_START_DASH: {\r\n                this._stateCommentStartDash(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT: {\r\n                this._stateComment(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_LESS_THAN_SIGN: {\r\n                this._stateCommentLessThanSign(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\r\n                this._stateCommentLessThanSignBang(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\r\n                this._stateCommentLessThanSignBangDash(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\r\n                this._stateCommentLessThanSignBangDashDash(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_END_DASH: {\r\n                this._stateCommentEndDash(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_END: {\r\n                this._stateCommentEnd(cp);\r\n                break;\r\n            }\r\n            case State.COMMENT_END_BANG: {\r\n                this._stateCommentEndBang(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE: {\r\n                this._stateDoctype(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_DOCTYPE_NAME: {\r\n                this._stateBeforeDoctypeName(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_NAME: {\r\n                this._stateDoctypeName(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_NAME: {\r\n                this._stateAfterDoctypeName(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\r\n                this._stateAfterDoctypePublicKeyword(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\r\n                this._stateBeforeDoctypePublicIdentifier(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\r\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\r\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\r\n                this._stateAfterDoctypePublicIdentifier(cp);\r\n                break;\r\n            }\r\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\r\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\r\n                this._stateAfterDoctypeSystemKeyword(cp);\r\n                break;\r\n            }\r\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\r\n                this._stateBeforeDoctypeSystemIdentifier(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\r\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\r\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\r\n                break;\r\n            }\r\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\r\n                this._stateAfterDoctypeSystemIdentifier(cp);\r\n                break;\r\n            }\r\n            case State.BOGUS_DOCTYPE: {\r\n                this._stateBogusDoctype(cp);\r\n                break;\r\n            }\r\n            case State.CDATA_SECTION: {\r\n                this._stateCdataSection(cp);\r\n                break;\r\n            }\r\n            case State.CDATA_SECTION_BRACKET: {\r\n                this._stateCdataSectionBracket(cp);\r\n                break;\r\n            }\r\n            case State.CDATA_SECTION_END: {\r\n                this._stateCdataSectionEnd(cp);\r\n                break;\r\n            }\r\n            case State.CHARACTER_REFERENCE: {\r\n                this._stateCharacterReference(cp);\r\n                break;\r\n            }\r\n            case State.NAMED_CHARACTER_REFERENCE: {\r\n                this._stateNamedCharacterReference(cp);\r\n                break;\r\n            }\r\n            case State.AMBIGUOUS_AMPERSAND: {\r\n                this._stateAmbiguousAmpersand(cp);\r\n                break;\r\n            }\r\n            case State.NUMERIC_CHARACTER_REFERENCE: {\r\n                this._stateNumericCharacterReference(cp);\r\n                break;\r\n            }\r\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\r\n                this._stateHexademicalCharacterReferenceStart(cp);\r\n                break;\r\n            }\r\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\r\n                this._stateHexademicalCharacterReference(cp);\r\n                break;\r\n            }\r\n            case State.DECIMAL_CHARACTER_REFERENCE: {\r\n                this._stateDecimalCharacterReference(cp);\r\n                break;\r\n            }\r\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\r\n                this._stateNumericCharacterReferenceEnd(cp);\r\n                break;\r\n            }\r\n            default: {\r\n                throw new Error('Unknown state');\r\n            }\r\n        }\r\n    }\r\n    // State machine\r\n    // Data state\r\n    //------------------------------------------------------------------\r\n    _stateData(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.LESS_THAN_SIGN: {\r\n                this.state = State.TAG_OPEN;\r\n                break;\r\n            }\r\n            case CODE_POINTS.AMPERSAND: {\r\n                this.returnState = State.DATA;\r\n                this.state = State.CHARACTER_REFERENCE;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitCodePoint(cp);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    //  RCDATA state\r\n    //------------------------------------------------------------------\r\n    _stateRcdata(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.AMPERSAND: {\r\n                this.returnState = State.RCDATA;\r\n                this.state = State.CHARACTER_REFERENCE;\r\n                break;\r\n            }\r\n            case CODE_POINTS.LESS_THAN_SIGN: {\r\n                this.state = State.RCDATA_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // RAWTEXT state\r\n    //------------------------------------------------------------------\r\n    _stateRawtext(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.LESS_THAN_SIGN: {\r\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data state\r\n    //------------------------------------------------------------------\r\n    _stateScriptData(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // PLAINTEXT state\r\n    //------------------------------------------------------------------\r\n    _statePlaintext(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Tag open state\r\n    //------------------------------------------------------------------\r\n    _stateTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this._createStartTagToken();\r\n            this.state = State.TAG_NAME;\r\n            this._stateTagName(cp);\r\n        }\r\n        else\r\n            switch (cp) {\r\n                case CODE_POINTS.EXCLAMATION_MARK: {\r\n                    this.state = State.MARKUP_DECLARATION_OPEN;\r\n                    break;\r\n                }\r\n                case CODE_POINTS.SOLIDUS: {\r\n                    this.state = State.END_TAG_OPEN;\r\n                    break;\r\n                }\r\n                case CODE_POINTS.QUESTION_MARK: {\r\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\r\n                    this._createCommentToken(1);\r\n                    this.state = State.BOGUS_COMMENT;\r\n                    this._stateBogusComment(cp);\r\n                    break;\r\n                }\r\n                case CODE_POINTS.EOF: {\r\n                    this._err(ERR.eofBeforeTagName);\r\n                    this._emitChars('<');\r\n                    this._emitEOFToken();\r\n                    break;\r\n                }\r\n                default: {\r\n                    this._err(ERR.invalidFirstCharacterOfTagName);\r\n                    this._emitChars('<');\r\n                    this.state = State.DATA;\r\n                    this._stateData(cp);\r\n                }\r\n            }\r\n    }\r\n    // End tag open state\r\n    //------------------------------------------------------------------\r\n    _stateEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this._createEndTagToken();\r\n            this.state = State.TAG_NAME;\r\n            this._stateTagName(cp);\r\n        }\r\n        else\r\n            switch (cp) {\r\n                case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                    this._err(ERR.missingEndTagName);\r\n                    this.state = State.DATA;\r\n                    break;\r\n                }\r\n                case CODE_POINTS.EOF: {\r\n                    this._err(ERR.eofBeforeTagName);\r\n                    this._emitChars('</');\r\n                    this._emitEOFToken();\r\n                    break;\r\n                }\r\n                default: {\r\n                    this._err(ERR.invalidFirstCharacterOfTagName);\r\n                    this._createCommentToken(2);\r\n                    this.state = State.BOGUS_COMMENT;\r\n                    this._stateBogusComment(cp);\r\n                }\r\n            }\r\n    }\r\n    // Tag name state\r\n    //------------------------------------------------------------------\r\n    _stateTagName(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                break;\r\n            }\r\n            case CODE_POINTS.SOLIDUS: {\r\n                this.state = State.SELF_CLOSING_START_TAG;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.tagName += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\r\n            }\r\n        }\r\n    }\r\n    // RCDATA less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateRcdataLessThanSign(cp) {\r\n        if (cp === CODE_POINTS.SOLIDUS) {\r\n            this.state = State.RCDATA_END_TAG_OPEN;\r\n        }\r\n        else {\r\n            this._emitChars('<');\r\n            this.state = State.RCDATA;\r\n            this._stateRcdata(cp);\r\n        }\r\n    }\r\n    // RCDATA end tag open state\r\n    //------------------------------------------------------------------\r\n    _stateRcdataEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this.state = State.RCDATA_END_TAG_NAME;\r\n            this._stateRcdataEndTagName(cp);\r\n        }\r\n        else {\r\n            this._emitChars('</');\r\n            this.state = State.RCDATA;\r\n            this._stateRcdata(cp);\r\n        }\r\n    }\r\n    handleSpecialEndTag(_cp) {\r\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\r\n            return !this._ensureHibernation();\r\n        }\r\n        this._createEndTagToken();\r\n        const token = this.currentToken;\r\n        token.tagName = this.lastStartTagName;\r\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                this._advanceBy(this.lastStartTagName.length);\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                return false;\r\n            }\r\n            case CODE_POINTS.SOLIDUS: {\r\n                this._advanceBy(this.lastStartTagName.length);\r\n                this.state = State.SELF_CLOSING_START_TAG;\r\n                return false;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._advanceBy(this.lastStartTagName.length);\r\n                this.emitCurrentTagToken();\r\n                this.state = State.DATA;\r\n                return false;\r\n            }\r\n            default: {\r\n                return !this._ensureHibernation();\r\n            }\r\n        }\r\n    }\r\n    // RCDATA end tag name state\r\n    //------------------------------------------------------------------\r\n    _stateRcdataEndTagName(cp) {\r\n        if (this.handleSpecialEndTag(cp)) {\r\n            this._emitChars('</');\r\n            this.state = State.RCDATA;\r\n            this._stateRcdata(cp);\r\n        }\r\n    }\r\n    // RAWTEXT less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateRawtextLessThanSign(cp) {\r\n        if (cp === CODE_POINTS.SOLIDUS) {\r\n            this.state = State.RAWTEXT_END_TAG_OPEN;\r\n        }\r\n        else {\r\n            this._emitChars('<');\r\n            this.state = State.RAWTEXT;\r\n            this._stateRawtext(cp);\r\n        }\r\n    }\r\n    // RAWTEXT end tag open state\r\n    //------------------------------------------------------------------\r\n    _stateRawtextEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this.state = State.RAWTEXT_END_TAG_NAME;\r\n            this._stateRawtextEndTagName(cp);\r\n        }\r\n        else {\r\n            this._emitChars('</');\r\n            this.state = State.RAWTEXT;\r\n            this._stateRawtext(cp);\r\n        }\r\n    }\r\n    // RAWTEXT end tag name state\r\n    //------------------------------------------------------------------\r\n    _stateRawtextEndTagName(cp) {\r\n        if (this.handleSpecialEndTag(cp)) {\r\n            this._emitChars('</');\r\n            this.state = State.RAWTEXT;\r\n            this._stateRawtext(cp);\r\n        }\r\n    }\r\n    // Script data less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataLessThanSign(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.SOLIDUS: {\r\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EXCLAMATION_MARK: {\r\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\r\n                this._emitChars('<!');\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitChars('<');\r\n                this.state = State.SCRIPT_DATA;\r\n                this._stateScriptData(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data end tag open state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\r\n            this._stateScriptDataEndTagName(cp);\r\n        }\r\n        else {\r\n            this._emitChars('</');\r\n            this.state = State.SCRIPT_DATA;\r\n            this._stateScriptData(cp);\r\n        }\r\n    }\r\n    // Script data end tag name state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEndTagName(cp) {\r\n        if (this.handleSpecialEndTag(cp)) {\r\n            this._emitChars('</');\r\n            this.state = State.SCRIPT_DATA;\r\n            this._stateScriptData(cp);\r\n        }\r\n    }\r\n    // Script data escape start state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapeStart(cp) {\r\n        if (cp === CODE_POINTS.HYPHEN_MINUS) {\r\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\r\n            this._emitChars('-');\r\n        }\r\n        else {\r\n            this.state = State.SCRIPT_DATA;\r\n            this._stateScriptData(cp);\r\n        }\r\n    }\r\n    // Script data escape start dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapeStartDash(cp) {\r\n        if (cp === CODE_POINTS.HYPHEN_MINUS) {\r\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\r\n            this._emitChars('-');\r\n        }\r\n        else {\r\n            this.state = State.SCRIPT_DATA;\r\n            this._stateScriptData(cp);\r\n        }\r\n    }\r\n    // Script data escaped state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscaped(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.HYPHEN_MINUS: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case CODE_POINTS.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data escaped dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedDash(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.HYPHEN_MINUS: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case CODE_POINTS.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.state = State.SCRIPT_DATA_ESCAPED;\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED;\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data escaped dash dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedDashDash(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.HYPHEN_MINUS: {\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case CODE_POINTS.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA;\r\n                this._emitChars('>');\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.state = State.SCRIPT_DATA_ESCAPED;\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.SCRIPT_DATA_ESCAPED;\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data escaped less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedLessThanSign(cp) {\r\n        if (cp === CODE_POINTS.SOLIDUS) {\r\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\r\n        }\r\n        else if (isAsciiLetter(cp)) {\r\n            this._emitChars('<');\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\r\n            this._stateScriptDataDoubleEscapeStart(cp);\r\n        }\r\n        else {\r\n            this._emitChars('<');\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n            this._stateScriptDataEscaped(cp);\r\n        }\r\n    }\r\n    // Script data escaped end tag open state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedEndTagOpen(cp) {\r\n        if (isAsciiLetter(cp)) {\r\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\r\n            this._stateScriptDataEscapedEndTagName(cp);\r\n        }\r\n        else {\r\n            this._emitChars('</');\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n            this._stateScriptDataEscaped(cp);\r\n        }\r\n    }\r\n    // Script data escaped end tag name state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataEscapedEndTagName(cp) {\r\n        if (this.handleSpecialEndTag(cp)) {\r\n            this._emitChars('</');\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n            this._stateScriptDataEscaped(cp);\r\n        }\r\n    }\r\n    // Script data double escape start state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapeStart(cp) {\r\n        if (this.preprocessor.startsWith(SEQUENCES.SCRIPT, false) &&\r\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))) {\r\n            this._emitCodePoint(cp);\r\n            for (let i = 0; i < SEQUENCES.SCRIPT.length; i++) {\r\n                this._emitCodePoint(this._consume());\r\n            }\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n        }\r\n        else if (!this._ensureHibernation()) {\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n            this._stateScriptDataEscaped(cp);\r\n        }\r\n    }\r\n    // Script data double escaped state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscaped(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.HYPHEN_MINUS: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case CODE_POINTS.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\r\n                this._emitChars('<');\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data double escaped dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapedDash(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.HYPHEN_MINUS: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case CODE_POINTS.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\r\n                this._emitChars('<');\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data double escaped dash dash state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapedDashDash(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.HYPHEN_MINUS: {\r\n                this._emitChars('-');\r\n                break;\r\n            }\r\n            case CODE_POINTS.LESS_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\r\n                this._emitChars('<');\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.state = State.SCRIPT_DATA;\r\n                this._emitChars('>');\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n                this._emitChars(REPLACEMENT_CHARACTER);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Script data double escaped less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\r\n        if (cp === CODE_POINTS.SOLIDUS) {\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\r\n            this._emitChars('/');\r\n        }\r\n        else {\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n            this._stateScriptDataDoubleEscaped(cp);\r\n        }\r\n    }\r\n    // Script data double escape end state\r\n    //------------------------------------------------------------------\r\n    _stateScriptDataDoubleEscapeEnd(cp) {\r\n        if (this.preprocessor.startsWith(SEQUENCES.SCRIPT, false) &&\r\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(SEQUENCES.SCRIPT.length))) {\r\n            this._emitCodePoint(cp);\r\n            for (let i = 0; i < SEQUENCES.SCRIPT.length; i++) {\r\n                this._emitCodePoint(this._consume());\r\n            }\r\n            this.state = State.SCRIPT_DATA_ESCAPED;\r\n        }\r\n        else if (!this._ensureHibernation()) {\r\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\r\n            this._stateScriptDataDoubleEscaped(cp);\r\n        }\r\n    }\r\n    // Before attribute name state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeAttributeName(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case CODE_POINTS.SOLIDUS:\r\n            case CODE_POINTS.GREATER_THAN_SIGN:\r\n            case CODE_POINTS.EOF: {\r\n                this.state = State.AFTER_ATTRIBUTE_NAME;\r\n                this._stateAfterAttributeName(cp);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EQUALS_SIGN: {\r\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\r\n                this._createAttr('=');\r\n                this.state = State.ATTRIBUTE_NAME;\r\n                break;\r\n            }\r\n            default: {\r\n                this._createAttr('');\r\n                this.state = State.ATTRIBUTE_NAME;\r\n                this._stateAttributeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Attribute name state\r\n    //------------------------------------------------------------------\r\n    _stateAttributeName(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED:\r\n            case CODE_POINTS.SOLIDUS:\r\n            case CODE_POINTS.GREATER_THAN_SIGN:\r\n            case CODE_POINTS.EOF: {\r\n                this._leaveAttrName();\r\n                this.state = State.AFTER_ATTRIBUTE_NAME;\r\n                this._stateAfterAttributeName(cp);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EQUALS_SIGN: {\r\n                this._leaveAttrName();\r\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\r\n                break;\r\n            }\r\n            case CODE_POINTS.QUOTATION_MARK:\r\n            case CODE_POINTS.APOSTROPHE:\r\n            case CODE_POINTS.LESS_THAN_SIGN: {\r\n                this._err(ERR.unexpectedCharacterInAttributeName);\r\n                this.currentAttr.name += String.fromCodePoint(cp);\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            default: {\r\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\r\n            }\r\n        }\r\n    }\r\n    // After attribute name state\r\n    //------------------------------------------------------------------\r\n    _stateAfterAttributeName(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case CODE_POINTS.SOLIDUS: {\r\n                this.state = State.SELF_CLOSING_START_TAG;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EQUALS_SIGN: {\r\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._createAttr('');\r\n                this.state = State.ATTRIBUTE_NAME;\r\n                this._stateAttributeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Before attribute value state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeAttributeValue(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case CODE_POINTS.QUOTATION_MARK: {\r\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.APOSTROPHE: {\r\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingAttributeValue);\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\r\n                this._stateAttributeValueUnquoted(cp);\r\n            }\r\n        }\r\n    }\r\n    // Attribute value (double-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateAttributeValueDoubleQuoted(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.QUOTATION_MARK: {\r\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.AMPERSAND: {\r\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\r\n                this.state = State.CHARACTER_REFERENCE;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.currentAttr.value += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Attribute value (single-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateAttributeValueSingleQuoted(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.APOSTROPHE: {\r\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.AMPERSAND: {\r\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\r\n                this.state = State.CHARACTER_REFERENCE;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.currentAttr.value += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Attribute value (unquoted) state\r\n    //------------------------------------------------------------------\r\n    _stateAttributeValueUnquoted(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                this._leaveAttrValue();\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                break;\r\n            }\r\n            case CODE_POINTS.AMPERSAND: {\r\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\r\n                this.state = State.CHARACTER_REFERENCE;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._leaveAttrValue();\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.QUOTATION_MARK:\r\n            case CODE_POINTS.APOSTROPHE:\r\n            case CODE_POINTS.LESS_THAN_SIGN:\r\n            case CODE_POINTS.EQUALS_SIGN:\r\n            case CODE_POINTS.GRAVE_ACCENT: {\r\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\r\n                this.currentAttr.value += String.fromCodePoint(cp);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this.currentAttr.value += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // After attribute value (quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateAfterAttributeValueQuoted(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                this._leaveAttrValue();\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                break;\r\n            }\r\n            case CODE_POINTS.SOLIDUS: {\r\n                this._leaveAttrValue();\r\n                this.state = State.SELF_CLOSING_START_TAG;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._leaveAttrValue();\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingWhitespaceBetweenAttributes);\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                this._stateBeforeAttributeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Self-closing start tag state\r\n    //------------------------------------------------------------------\r\n    _stateSelfClosingStartTag(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                const token = this.currentToken;\r\n                token.selfClosing = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentTagToken();\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInTag);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.unexpectedSolidusInTag);\r\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\r\n                this._stateBeforeAttributeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Bogus comment state\r\n    //------------------------------------------------------------------\r\n    _stateBogusComment(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.data += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Markup declaration open state\r\n    //------------------------------------------------------------------\r\n    _stateMarkupDeclarationOpen(cp) {\r\n        if (this._consumeSequenceIfMatch(SEQUENCES.DASH_DASH, true)) {\r\n            this._createCommentToken(SEQUENCES.DASH_DASH.length + 1);\r\n            this.state = State.COMMENT_START;\r\n        }\r\n        else if (this._consumeSequenceIfMatch(SEQUENCES.DOCTYPE, false)) {\r\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\r\n            this.currentLocation = this.getCurrentLocation(SEQUENCES.DOCTYPE.length + 1);\r\n            this.state = State.DOCTYPE;\r\n        }\r\n        else if (this._consumeSequenceIfMatch(SEQUENCES.CDATA_START, true)) {\r\n            if (this.inForeignNode) {\r\n                this.state = State.CDATA_SECTION;\r\n            }\r\n            else {\r\n                this._err(ERR.cdataInHtmlContent);\r\n                this._createCommentToken(SEQUENCES.CDATA_START.length + 1);\r\n                this.currentToken.data = '[CDATA[';\r\n                this.state = State.BOGUS_COMMENT;\r\n            }\r\n        }\r\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\r\n        //results are no longer valid and we will need to start over.\r\n        else if (!this._ensureHibernation()) {\r\n            this._err(ERR.incorrectlyOpenedComment);\r\n            this._createCommentToken(2);\r\n            this.state = State.BOGUS_COMMENT;\r\n            this._stateBogusComment(cp);\r\n        }\r\n    }\r\n    // Comment start state\r\n    //------------------------------------------------------------------\r\n    _stateCommentStart(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.HYPHEN_MINUS: {\r\n                this.state = State.COMMENT_START_DASH;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptClosingOfEmptyComment);\r\n                this.state = State.DATA;\r\n                const token = this.currentToken;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment start dash state\r\n    //------------------------------------------------------------------\r\n    _stateCommentStartDash(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.HYPHEN_MINUS: {\r\n                this.state = State.COMMENT_END;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptClosingOfEmptyComment);\r\n                this.state = State.DATA;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += '-';\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment state\r\n    //------------------------------------------------------------------\r\n    _stateComment(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.HYPHEN_MINUS: {\r\n                this.state = State.COMMENT_END_DASH;\r\n                break;\r\n            }\r\n            case CODE_POINTS.LESS_THAN_SIGN: {\r\n                token.data += '<';\r\n                this.state = State.COMMENT_LESS_THAN_SIGN;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.data += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment less-than sign state\r\n    //------------------------------------------------------------------\r\n    _stateCommentLessThanSign(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.EXCLAMATION_MARK: {\r\n                token.data += '!';\r\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\r\n                break;\r\n            }\r\n            case CODE_POINTS.LESS_THAN_SIGN: {\r\n                token.data += '<';\r\n                break;\r\n            }\r\n            default: {\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment less-than sign bang state\r\n    //------------------------------------------------------------------\r\n    _stateCommentLessThanSignBang(cp) {\r\n        if (cp === CODE_POINTS.HYPHEN_MINUS) {\r\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\r\n        }\r\n        else {\r\n            this.state = State.COMMENT;\r\n            this._stateComment(cp);\r\n        }\r\n    }\r\n    // Comment less-than sign bang dash state\r\n    //------------------------------------------------------------------\r\n    _stateCommentLessThanSignBangDash(cp) {\r\n        if (cp === CODE_POINTS.HYPHEN_MINUS) {\r\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\r\n        }\r\n        else {\r\n            this.state = State.COMMENT_END_DASH;\r\n            this._stateCommentEndDash(cp);\r\n        }\r\n    }\r\n    // Comment less-than sign bang dash dash state\r\n    //------------------------------------------------------------------\r\n    _stateCommentLessThanSignBangDashDash(cp) {\r\n        if (cp !== CODE_POINTS.GREATER_THAN_SIGN && cp !== CODE_POINTS.EOF) {\r\n            this._err(ERR.nestedComment);\r\n        }\r\n        this.state = State.COMMENT_END;\r\n        this._stateCommentEnd(cp);\r\n    }\r\n    // Comment end dash state\r\n    //------------------------------------------------------------------\r\n    _stateCommentEndDash(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.HYPHEN_MINUS: {\r\n                this.state = State.COMMENT_END;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += '-';\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment end state\r\n    //------------------------------------------------------------------\r\n    _stateCommentEnd(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EXCLAMATION_MARK: {\r\n                this.state = State.COMMENT_END_BANG;\r\n                break;\r\n            }\r\n            case CODE_POINTS.HYPHEN_MINUS: {\r\n                token.data += '-';\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += '--';\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // Comment end bang state\r\n    //------------------------------------------------------------------\r\n    _stateCommentEndBang(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.HYPHEN_MINUS: {\r\n                token.data += '--!';\r\n                this.state = State.COMMENT_END_DASH;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._err(ERR.incorrectlyClosedComment);\r\n                this.state = State.DATA;\r\n                this.emitCurrentComment(token);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInComment);\r\n                this.emitCurrentComment(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.data += '--!';\r\n                this.state = State.COMMENT;\r\n                this._stateComment(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE state\r\n    //------------------------------------------------------------------\r\n    _stateDoctype(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                this.state = State.BEFORE_DOCTYPE_NAME;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.state = State.BEFORE_DOCTYPE_NAME;\r\n                this._stateBeforeDoctypeName(cp);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                this._createDoctypeToken(null);\r\n                const token = this.currentToken;\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\r\n                this.state = State.BEFORE_DOCTYPE_NAME;\r\n                this._stateBeforeDoctypeName(cp);\r\n            }\r\n        }\r\n    }\r\n    // Before DOCTYPE name state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeDoctypeName(cp) {\r\n        if (isAsciiUpper(cp)) {\r\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\r\n            this.state = State.DOCTYPE_NAME;\r\n        }\r\n        else\r\n            switch (cp) {\r\n                case CODE_POINTS.SPACE:\r\n                case CODE_POINTS.LINE_FEED:\r\n                case CODE_POINTS.TABULATION:\r\n                case CODE_POINTS.FORM_FEED: {\r\n                    // Ignore whitespace\r\n                    break;\r\n                }\r\n                case CODE_POINTS.NULL: {\r\n                    this._err(ERR.unexpectedNullCharacter);\r\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\r\n                    this.state = State.DOCTYPE_NAME;\r\n                    break;\r\n                }\r\n                case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                    this._err(ERR.missingDoctypeName);\r\n                    this._createDoctypeToken(null);\r\n                    const token = this.currentToken;\r\n                    token.forceQuirks = true;\r\n                    this.emitCurrentDoctype(token);\r\n                    this.state = State.DATA;\r\n                    break;\r\n                }\r\n                case CODE_POINTS.EOF: {\r\n                    this._err(ERR.eofInDoctype);\r\n                    this._createDoctypeToken(null);\r\n                    const token = this.currentToken;\r\n                    token.forceQuirks = true;\r\n                    this.emitCurrentDoctype(token);\r\n                    this._emitEOFToken();\r\n                    break;\r\n                }\r\n                default: {\r\n                    this._createDoctypeToken(String.fromCodePoint(cp));\r\n                    this.state = State.DOCTYPE_NAME;\r\n                }\r\n            }\r\n    }\r\n    // DOCTYPE name state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypeName(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                this.state = State.AFTER_DOCTYPE_NAME;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.name += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE name state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypeName(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                if (this._consumeSequenceIfMatch(SEQUENCES.PUBLIC, false)) {\r\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\r\n                }\r\n                else if (this._consumeSequenceIfMatch(SEQUENCES.SYSTEM, false)) {\r\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\r\n                }\r\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\r\n                //results are no longer valid and we will need to start over.\r\n                else if (!this._ensureHibernation()) {\r\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\r\n                    token.forceQuirks = true;\r\n                    this.state = State.BOGUS_DOCTYPE;\r\n                    this._stateBogusDoctype(cp);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE public keyword state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypePublicKeyword(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.QUOTATION_MARK: {\r\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\r\n                token.publicId = '';\r\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.APOSTROPHE: {\r\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\r\n                token.publicId = '';\r\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // Before DOCTYPE public identifier state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeDoctypePublicIdentifier(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case CODE_POINTS.QUOTATION_MARK: {\r\n                token.publicId = '';\r\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.APOSTROPHE: {\r\n                token.publicId = '';\r\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE public identifier (double-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.QUOTATION_MARK: {\r\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.publicId += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.publicId += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE public identifier (single-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.APOSTROPHE: {\r\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.publicId += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptDoctypePublicIdentifier);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.publicId += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE public identifier state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypePublicIdentifier(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case CODE_POINTS.QUOTATION_MARK: {\r\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.APOSTROPHE: {\r\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // Between DOCTYPE public and system identifiers state\r\n    //------------------------------------------------------------------\r\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case CODE_POINTS.QUOTATION_MARK: {\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.APOSTROPHE: {\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE system keyword state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypeSystemKeyword(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.QUOTATION_MARK: {\r\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.APOSTROPHE: {\r\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // Before DOCTYPE system identifier state\r\n    //------------------------------------------------------------------\r\n    _stateBeforeDoctypeSystemIdentifier(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case CODE_POINTS.QUOTATION_MARK: {\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.APOSTROPHE: {\r\n                token.systemId = '';\r\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._err(ERR.missingDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.DATA;\r\n                this.emitCurrentDoctype(token);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE system identifier (double-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.QUOTATION_MARK: {\r\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.systemId += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.systemId += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // DOCTYPE system identifier (single-quoted) state\r\n    //------------------------------------------------------------------\r\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.APOSTROPHE: {\r\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                token.systemId += REPLACEMENT_CHARACTER;\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this._err(ERR.abruptDoctypeSystemIdentifier);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                token.systemId += String.fromCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // After DOCTYPE system identifier state\r\n    //------------------------------------------------------------------\r\n    _stateAfterDoctypeSystemIdentifier(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.SPACE:\r\n            case CODE_POINTS.LINE_FEED:\r\n            case CODE_POINTS.TABULATION:\r\n            case CODE_POINTS.FORM_FEED: {\r\n                // Ignore whitespace\r\n                break;\r\n            }\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInDoctype);\r\n                token.forceQuirks = true;\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\r\n                this.state = State.BOGUS_DOCTYPE;\r\n                this._stateBogusDoctype(cp);\r\n            }\r\n        }\r\n    }\r\n    // Bogus DOCTYPE state\r\n    //------------------------------------------------------------------\r\n    _stateBogusDoctype(cp) {\r\n        const token = this.currentToken;\r\n        switch (cp) {\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.emitCurrentDoctype(token);\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case CODE_POINTS.NULL: {\r\n                this._err(ERR.unexpectedNullCharacter);\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this.emitCurrentDoctype(token);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            // Do nothing\r\n        }\r\n    }\r\n    // CDATA section state\r\n    //------------------------------------------------------------------\r\n    _stateCdataSection(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.RIGHT_SQUARE_BRACKET: {\r\n                this.state = State.CDATA_SECTION_BRACKET;\r\n                break;\r\n            }\r\n            case CODE_POINTS.EOF: {\r\n                this._err(ERR.eofInCdata);\r\n                this._emitEOFToken();\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitCodePoint(cp);\r\n            }\r\n        }\r\n    }\r\n    // CDATA section bracket state\r\n    //------------------------------------------------------------------\r\n    _stateCdataSectionBracket(cp) {\r\n        if (cp === CODE_POINTS.RIGHT_SQUARE_BRACKET) {\r\n            this.state = State.CDATA_SECTION_END;\r\n        }\r\n        else {\r\n            this._emitChars(']');\r\n            this.state = State.CDATA_SECTION;\r\n            this._stateCdataSection(cp);\r\n        }\r\n    }\r\n    // CDATA section end state\r\n    //------------------------------------------------------------------\r\n    _stateCdataSectionEnd(cp) {\r\n        switch (cp) {\r\n            case CODE_POINTS.GREATER_THAN_SIGN: {\r\n                this.state = State.DATA;\r\n                break;\r\n            }\r\n            case CODE_POINTS.RIGHT_SQUARE_BRACKET: {\r\n                this._emitChars(']');\r\n                break;\r\n            }\r\n            default: {\r\n                this._emitChars(']]');\r\n                this.state = State.CDATA_SECTION;\r\n                this._stateCdataSection(cp);\r\n            }\r\n        }\r\n    }\r\n    // Character reference state\r\n    //------------------------------------------------------------------\r\n    _stateCharacterReference(cp) {\r\n        if (cp === CODE_POINTS.NUMBER_SIGN) {\r\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\r\n        }\r\n        else if (isAsciiAlphaNumeric(cp)) {\r\n            this.state = State.NAMED_CHARACTER_REFERENCE;\r\n            this._stateNamedCharacterReference(cp);\r\n        }\r\n        else {\r\n            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);\r\n            this._reconsumeInState(this.returnState, cp);\r\n        }\r\n    }\r\n    // Named character reference state\r\n    //------------------------------------------------------------------\r\n    _stateNamedCharacterReference(cp) {\r\n        const matchResult = this._matchNamedCharacterReference(cp);\r\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\r\n        //results are no longer valid and we will need to start over.\r\n        if (this._ensureHibernation()) ;\r\n        else if (matchResult) {\r\n            for (let i = 0; i < matchResult.length; i++) {\r\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\r\n            }\r\n            this.state = this.returnState;\r\n        }\r\n        else {\r\n            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);\r\n            this.state = State.AMBIGUOUS_AMPERSAND;\r\n        }\r\n    }\r\n    // Ambiguos ampersand state\r\n    //------------------------------------------------------------------\r\n    _stateAmbiguousAmpersand(cp) {\r\n        if (isAsciiAlphaNumeric(cp)) {\r\n            this._flushCodePointConsumedAsCharacterReference(cp);\r\n        }\r\n        else {\r\n            if (cp === CODE_POINTS.SEMICOLON) {\r\n                this._err(ERR.unknownNamedCharacterReference);\r\n            }\r\n            this._reconsumeInState(this.returnState, cp);\r\n        }\r\n    }\r\n    // Numeric character reference state\r\n    //------------------------------------------------------------------\r\n    _stateNumericCharacterReference(cp) {\r\n        this.charRefCode = 0;\r\n        if (cp === CODE_POINTS.LATIN_SMALL_X || cp === CODE_POINTS.LATIN_CAPITAL_X) {\r\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\r\n        }\r\n        // Inlined decimal character reference start state\r\n        else if (isAsciiDigit(cp)) {\r\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\r\n            this._stateDecimalCharacterReference(cp);\r\n        }\r\n        else {\r\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\r\n            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);\r\n            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.NUMBER_SIGN);\r\n            this._reconsumeInState(this.returnState, cp);\r\n        }\r\n    }\r\n    // Hexademical character reference start state\r\n    //------------------------------------------------------------------\r\n    _stateHexademicalCharacterReferenceStart(cp) {\r\n        if (isAsciiHexDigit(cp)) {\r\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\r\n            this._stateHexademicalCharacterReference(cp);\r\n        }\r\n        else {\r\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\r\n            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.AMPERSAND);\r\n            this._flushCodePointConsumedAsCharacterReference(CODE_POINTS.NUMBER_SIGN);\r\n            this._unconsume(2);\r\n            this.state = this.returnState;\r\n        }\r\n    }\r\n    // Hexademical character reference state\r\n    //------------------------------------------------------------------\r\n    _stateHexademicalCharacterReference(cp) {\r\n        if (isAsciiUpperHexDigit(cp)) {\r\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\r\n        }\r\n        else if (isAsciiLowerHexDigit(cp)) {\r\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\r\n        }\r\n        else if (isAsciiDigit(cp)) {\r\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\r\n        }\r\n        else if (cp === CODE_POINTS.SEMICOLON) {\r\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\r\n        }\r\n        else {\r\n            this._err(ERR.missingSemicolonAfterCharacterReference);\r\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\r\n            this._stateNumericCharacterReferenceEnd(cp);\r\n        }\r\n    }\r\n    // Decimal character reference state\r\n    //------------------------------------------------------------------\r\n    _stateDecimalCharacterReference(cp) {\r\n        if (isAsciiDigit(cp)) {\r\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\r\n        }\r\n        else if (cp === CODE_POINTS.SEMICOLON) {\r\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\r\n        }\r\n        else {\r\n            this._err(ERR.missingSemicolonAfterCharacterReference);\r\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\r\n            this._stateNumericCharacterReferenceEnd(cp);\r\n        }\r\n    }\r\n    // Numeric character reference end state\r\n    //------------------------------------------------------------------\r\n    _stateNumericCharacterReferenceEnd(cp) {\r\n        if (this.charRefCode === CODE_POINTS.NULL) {\r\n            this._err(ERR.nullCharacterReference);\r\n            this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;\r\n        }\r\n        else if (this.charRefCode > 1114111) {\r\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\r\n            this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;\r\n        }\r\n        else if (isSurrogate(this.charRefCode)) {\r\n            this._err(ERR.surrogateCharacterReference);\r\n            this.charRefCode = CODE_POINTS.REPLACEMENT_CHARACTER;\r\n        }\r\n        else if (isUndefinedCodePoint(this.charRefCode)) {\r\n            this._err(ERR.noncharacterCharacterReference);\r\n        }\r\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === CODE_POINTS.CARRIAGE_RETURN) {\r\n            this._err(ERR.controlCharacterReference);\r\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\r\n            if (replacement !== undefined) {\r\n                this.charRefCode = replacement;\r\n            }\r\n        }\r\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\r\n        this._reconsumeInState(this.returnState, cp);\r\n    }\r\n}\r\n\r\n//Element utils\r\nconst IMPLICIT_END_TAG_REQUIRED = new Set([TAG_ID.DD, TAG_ID.DT, TAG_ID.LI, TAG_ID.OPTGROUP, TAG_ID.OPTION, TAG_ID.P, TAG_ID.RB, TAG_ID.RP, TAG_ID.RT, TAG_ID.RTC]);\r\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\r\n    ...IMPLICIT_END_TAG_REQUIRED,\r\n    TAG_ID.CAPTION,\r\n    TAG_ID.COLGROUP,\r\n    TAG_ID.TBODY,\r\n    TAG_ID.TD,\r\n    TAG_ID.TFOOT,\r\n    TAG_ID.TH,\r\n    TAG_ID.THEAD,\r\n    TAG_ID.TR,\r\n]);\r\nconst SCOPING_ELEMENT_NS = new Map([\r\n    [TAG_ID.APPLET, NS.HTML],\r\n    [TAG_ID.CAPTION, NS.HTML],\r\n    [TAG_ID.HTML, NS.HTML],\r\n    [TAG_ID.MARQUEE, NS.HTML],\r\n    [TAG_ID.OBJECT, NS.HTML],\r\n    [TAG_ID.TABLE, NS.HTML],\r\n    [TAG_ID.TD, NS.HTML],\r\n    [TAG_ID.TEMPLATE, NS.HTML],\r\n    [TAG_ID.TH, NS.HTML],\r\n    [TAG_ID.ANNOTATION_XML, NS.MATHML],\r\n    [TAG_ID.MI, NS.MATHML],\r\n    [TAG_ID.MN, NS.MATHML],\r\n    [TAG_ID.MO, NS.MATHML],\r\n    [TAG_ID.MS, NS.MATHML],\r\n    [TAG_ID.MTEXT, NS.MATHML],\r\n    [TAG_ID.DESC, NS.SVG],\r\n    [TAG_ID.FOREIGN_OBJECT, NS.SVG],\r\n    [TAG_ID.TITLE, NS.SVG],\r\n]);\r\nconst NAMED_HEADERS = [TAG_ID.H1, TAG_ID.H2, TAG_ID.H3, TAG_ID.H4, TAG_ID.H5, TAG_ID.H6];\r\nconst TABLE_ROW_CONTEXT = [TAG_ID.TR, TAG_ID.TEMPLATE, TAG_ID.HTML];\r\nconst TABLE_BODY_CONTEXT = [TAG_ID.TBODY, TAG_ID.TFOOT, TAG_ID.THEAD, TAG_ID.TEMPLATE, TAG_ID.HTML];\r\nconst TABLE_CONTEXT = [TAG_ID.TABLE, TAG_ID.TEMPLATE, TAG_ID.HTML];\r\nconst TABLE_CELLS = [TAG_ID.TD, TAG_ID.TH];\r\n//Stack of open elements\r\nclass OpenElementStack {\r\n    get currentTmplContentOrNode() {\r\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\r\n    }\r\n    constructor(document, treeAdapter, handler) {\r\n        this.treeAdapter = treeAdapter;\r\n        this.handler = handler;\r\n        this.items = [];\r\n        this.tagIDs = [];\r\n        this.stackTop = -1;\r\n        this.tmplCount = 0;\r\n        this.currentTagId = TAG_ID.UNKNOWN;\r\n        this.current = document;\r\n    }\r\n    //Index of element\r\n    _indexOf(element) {\r\n        return this.items.lastIndexOf(element, this.stackTop);\r\n    }\r\n    //Update current element\r\n    _isInTemplate() {\r\n        return this.currentTagId === TAG_ID.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\r\n    }\r\n    _updateCurrentElement() {\r\n        this.current = this.items[this.stackTop];\r\n        this.currentTagId = this.tagIDs[this.stackTop];\r\n    }\r\n    //Mutations\r\n    push(element, tagID) {\r\n        this.stackTop++;\r\n        this.items[this.stackTop] = element;\r\n        this.current = element;\r\n        this.tagIDs[this.stackTop] = tagID;\r\n        this.currentTagId = tagID;\r\n        if (this._isInTemplate()) {\r\n            this.tmplCount++;\r\n        }\r\n        this.handler.onItemPush(element, tagID, true);\r\n    }\r\n    pop() {\r\n        const popped = this.current;\r\n        if (this.tmplCount > 0 && this._isInTemplate()) {\r\n            this.tmplCount--;\r\n        }\r\n        this.stackTop--;\r\n        this._updateCurrentElement();\r\n        this.handler.onItemPop(popped, true);\r\n    }\r\n    replace(oldElement, newElement) {\r\n        const idx = this._indexOf(oldElement);\r\n        this.items[idx] = newElement;\r\n        if (idx === this.stackTop) {\r\n            this.current = newElement;\r\n        }\r\n    }\r\n    insertAfter(referenceElement, newElement, newElementID) {\r\n        const insertionIdx = this._indexOf(referenceElement) + 1;\r\n        this.items.splice(insertionIdx, 0, newElement);\r\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\r\n        this.stackTop++;\r\n        if (insertionIdx === this.stackTop) {\r\n            this._updateCurrentElement();\r\n        }\r\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\r\n    }\r\n    popUntilTagNamePopped(tagName) {\r\n        let targetIdx = this.stackTop + 1;\r\n        do {\r\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\r\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\r\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\r\n    }\r\n    shortenToLength(idx) {\r\n        while (this.stackTop >= idx) {\r\n            const popped = this.current;\r\n            if (this.tmplCount > 0 && this._isInTemplate()) {\r\n                this.tmplCount -= 1;\r\n            }\r\n            this.stackTop--;\r\n            this._updateCurrentElement();\r\n            this.handler.onItemPop(popped, this.stackTop < idx);\r\n        }\r\n    }\r\n    popUntilElementPopped(element) {\r\n        const idx = this._indexOf(element);\r\n        this.shortenToLength(idx < 0 ? 0 : idx);\r\n    }\r\n    popUntilPopped(tagNames, targetNS) {\r\n        const idx = this._indexOfTagNames(tagNames, targetNS);\r\n        this.shortenToLength(idx < 0 ? 0 : idx);\r\n    }\r\n    popUntilNumberedHeaderPopped() {\r\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\r\n    }\r\n    popUntilTableCellPopped() {\r\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\r\n    }\r\n    popAllUpToHtmlElement() {\r\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\r\n        //we perform this fast stack clean up.\r\n        this.tmplCount = 0;\r\n        this.shortenToLength(1);\r\n    }\r\n    _indexOfTagNames(tagNames, namespace) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    clearBackTo(tagNames, targetNS) {\r\n        const idx = this._indexOfTagNames(tagNames, targetNS);\r\n        this.shortenToLength(idx + 1);\r\n    }\r\n    clearBackToTableContext() {\r\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\r\n    }\r\n    clearBackToTableBodyContext() {\r\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\r\n    }\r\n    clearBackToTableRowContext() {\r\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\r\n    }\r\n    remove(element) {\r\n        const idx = this._indexOf(element);\r\n        if (idx >= 0) {\r\n            if (idx === this.stackTop) {\r\n                this.pop();\r\n            }\r\n            else {\r\n                this.items.splice(idx, 1);\r\n                this.tagIDs.splice(idx, 1);\r\n                this.stackTop--;\r\n                this._updateCurrentElement();\r\n                this.handler.onItemPop(element, false);\r\n            }\r\n        }\r\n    }\r\n    //Search\r\n    tryPeekProperlyNestedBodyElement() {\r\n        //Properly nested <body> element (should be second element in stack).\r\n        return this.stackTop >= 1 && this.tagIDs[1] === TAG_ID.BODY ? this.items[1] : null;\r\n    }\r\n    contains(element) {\r\n        return this._indexOf(element) > -1;\r\n    }\r\n    getCommonAncestor(element) {\r\n        const elementIdx = this._indexOf(element) - 1;\r\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\r\n    }\r\n    isRootHtmlElementCurrent() {\r\n        return this.stackTop === 0 && this.tagIDs[0] === TAG_ID.HTML;\r\n    }\r\n    //Element in scope\r\n    hasInScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasNumberedHeaderInScope() {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasInListItemScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n            if (((tn === TAG_ID.UL || tn === TAG_ID.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasInButtonScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (tn === tagName && ns === NS.HTML) {\r\n                return true;\r\n            }\r\n            if ((tn === TAG_ID.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasInTableScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (ns !== NS.HTML) {\r\n                continue;\r\n            }\r\n            if (tn === tagName) {\r\n                return true;\r\n            }\r\n            if (tn === TAG_ID.TABLE || tn === TAG_ID.TEMPLATE || tn === TAG_ID.HTML) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasTableBodyContextInTableScope() {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (ns !== NS.HTML) {\r\n                continue;\r\n            }\r\n            if (tn === TAG_ID.TBODY || tn === TAG_ID.THEAD || tn === TAG_ID.TFOOT) {\r\n                return true;\r\n            }\r\n            if (tn === TAG_ID.TABLE || tn === TAG_ID.HTML) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    hasInSelectScope(tagName) {\r\n        for (let i = this.stackTop; i >= 0; i--) {\r\n            const tn = this.tagIDs[i];\r\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\r\n            if (ns !== NS.HTML) {\r\n                continue;\r\n            }\r\n            if (tn === tagName) {\r\n                return true;\r\n            }\r\n            if (tn !== TAG_ID.OPTION && tn !== TAG_ID.OPTGROUP) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    //Implied end tags\r\n    generateImpliedEndTags() {\r\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\r\n            this.pop();\r\n        }\r\n    }\r\n    generateImpliedEndTagsThoroughly() {\r\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\r\n            this.pop();\r\n        }\r\n    }\r\n    generateImpliedEndTagsWithExclusion(exclusionId) {\r\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\r\n            this.pop();\r\n        }\r\n    }\r\n}\r\n\r\n//Const\r\nconst NOAH_ARK_CAPACITY = 3;\r\nvar EntryType;\r\n(function (EntryType) {\r\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\r\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\r\n})(EntryType = EntryType || (EntryType = {}));\r\nconst MARKER = { type: EntryType.Marker };\r\n//List of formatting elements\r\nclass FormattingElementList {\r\n    constructor(treeAdapter) {\r\n        this.treeAdapter = treeAdapter;\r\n        this.entries = [];\r\n        this.bookmark = null;\r\n    }\r\n    //Noah Ark's condition\r\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\r\n    //lightweight heuristics without thorough attributes check.\r\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\r\n        const candidates = [];\r\n        const neAttrsLength = neAttrs.length;\r\n        const neTagName = this.treeAdapter.getTagName(newElement);\r\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\r\n        for (let i = 0; i < this.entries.length; i++) {\r\n            const entry = this.entries[i];\r\n            if (entry.type === EntryType.Marker) {\r\n                break;\r\n            }\r\n            const { element } = entry;\r\n            if (this.treeAdapter.getTagName(element) === neTagName &&\r\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\r\n                const elementAttrs = this.treeAdapter.getAttrList(element);\r\n                if (elementAttrs.length === neAttrsLength) {\r\n                    candidates.push({ idx: i, attrs: elementAttrs });\r\n                }\r\n            }\r\n        }\r\n        return candidates;\r\n    }\r\n    _ensureNoahArkCondition(newElement) {\r\n        if (this.entries.length < NOAH_ARK_CAPACITY)\r\n            return;\r\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\r\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\r\n        if (candidates.length < NOAH_ARK_CAPACITY)\r\n            return;\r\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\r\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\r\n        let validCandidates = 0;\r\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\r\n        for (let i = 0; i < candidates.length; i++) {\r\n            const candidate = candidates[i];\r\n            // We know that `candidate.attrs.length === neAttrs.length`\r\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\r\n                validCandidates += 1;\r\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\r\n                    this.entries.splice(candidate.idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //Mutations\r\n    insertMarker() {\r\n        this.entries.unshift(MARKER);\r\n    }\r\n    pushElement(element, token) {\r\n        this._ensureNoahArkCondition(element);\r\n        this.entries.unshift({\r\n            type: EntryType.Element,\r\n            element,\r\n            token,\r\n        });\r\n    }\r\n    insertElementAfterBookmark(element, token) {\r\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\r\n        this.entries.splice(bookmarkIdx, 0, {\r\n            type: EntryType.Element,\r\n            element,\r\n            token,\r\n        });\r\n    }\r\n    removeEntry(entry) {\r\n        const entryIndex = this.entries.indexOf(entry);\r\n        if (entryIndex >= 0) {\r\n            this.entries.splice(entryIndex, 1);\r\n        }\r\n    }\r\n    /**\r\n     * Clears the list of formatting elements up to the last marker.\r\n     *\r\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\r\n     */\r\n    clearToLastMarker() {\r\n        const markerIdx = this.entries.indexOf(MARKER);\r\n        if (markerIdx >= 0) {\r\n            this.entries.splice(0, markerIdx + 1);\r\n        }\r\n        else {\r\n            this.entries.length = 0;\r\n        }\r\n    }\r\n    //Search\r\n    getElementEntryInScopeWithTagName(tagName) {\r\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\r\n        return entry && entry.type === EntryType.Element ? entry : null;\r\n    }\r\n    getElementEntry(element) {\r\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\r\n    }\r\n}\r\n\r\nfunction createTextNode(value) {\r\n    return {\r\n        nodeName: '#text',\r\n        value,\r\n        parentNode: null,\r\n    };\r\n}\r\nconst defaultTreeAdapter = {\r\n    //Node construction\r\n    createDocument() {\r\n        return {\r\n            nodeName: '#document',\r\n            mode: DOCUMENT_MODE.NO_QUIRKS,\r\n            childNodes: [],\r\n        };\r\n    },\r\n    createDocumentFragment() {\r\n        return {\r\n            nodeName: '#document-fragment',\r\n            childNodes: [],\r\n        };\r\n    },\r\n    createElement(tagName, namespaceURI, attrs) {\r\n        return {\r\n            nodeName: tagName,\r\n            tagName,\r\n            attrs,\r\n            namespaceURI,\r\n            childNodes: [],\r\n            parentNode: null,\r\n        };\r\n    },\r\n    createCommentNode(data) {\r\n        return {\r\n            nodeName: '#comment',\r\n            data,\r\n            parentNode: null,\r\n        };\r\n    },\r\n    //Tree mutation\r\n    appendChild(parentNode, newNode) {\r\n        parentNode.childNodes.push(newNode);\r\n        newNode.parentNode = parentNode;\r\n    },\r\n    insertBefore(parentNode, newNode, referenceNode) {\r\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\r\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\r\n        newNode.parentNode = parentNode;\r\n    },\r\n    setTemplateContent(templateElement, contentElement) {\r\n        templateElement.content = contentElement;\r\n    },\r\n    getTemplateContent(templateElement) {\r\n        return templateElement.content;\r\n    },\r\n    setDocumentType(document, name, publicId, systemId) {\r\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\r\n        if (doctypeNode) {\r\n            doctypeNode.name = name;\r\n            doctypeNode.publicId = publicId;\r\n            doctypeNode.systemId = systemId;\r\n        }\r\n        else {\r\n            const node = {\r\n                nodeName: '#documentType',\r\n                name,\r\n                publicId,\r\n                systemId,\r\n                parentNode: null,\r\n            };\r\n            defaultTreeAdapter.appendChild(document, node);\r\n        }\r\n    },\r\n    setDocumentMode(document, mode) {\r\n        document.mode = mode;\r\n    },\r\n    getDocumentMode(document) {\r\n        return document.mode;\r\n    },\r\n    detachNode(node) {\r\n        if (node.parentNode) {\r\n            const idx = node.parentNode.childNodes.indexOf(node);\r\n            node.parentNode.childNodes.splice(idx, 1);\r\n            node.parentNode = null;\r\n        }\r\n    },\r\n    insertText(parentNode, text) {\r\n        if (parentNode.childNodes.length > 0) {\r\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\r\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\r\n                prevNode.value += text;\r\n                return;\r\n            }\r\n        }\r\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\r\n    },\r\n    insertTextBefore(parentNode, text, referenceNode) {\r\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\r\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\r\n            prevNode.value += text;\r\n        }\r\n        else {\r\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\r\n        }\r\n    },\r\n    adoptAttributes(recipient, attrs) {\r\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\r\n        for (let j = 0; j < attrs.length; j++) {\r\n            if (!recipientAttrsMap.has(attrs[j].name)) {\r\n                recipient.attrs.push(attrs[j]);\r\n            }\r\n        }\r\n    },\r\n    //Tree traversing\r\n    getFirstChild(node) {\r\n        return node.childNodes[0];\r\n    },\r\n    getChildNodes(node) {\r\n        return node.childNodes;\r\n    },\r\n    getParentNode(node) {\r\n        return node.parentNode;\r\n    },\r\n    getAttrList(element) {\r\n        return element.attrs;\r\n    },\r\n    //Node data\r\n    getTagName(element) {\r\n        return element.tagName;\r\n    },\r\n    getNamespaceURI(element) {\r\n        return element.namespaceURI;\r\n    },\r\n    getTextNodeContent(textNode) {\r\n        return textNode.value;\r\n    },\r\n    getCommentNodeContent(commentNode) {\r\n        return commentNode.data;\r\n    },\r\n    getDocumentTypeNodeName(doctypeNode) {\r\n        return doctypeNode.name;\r\n    },\r\n    getDocumentTypeNodePublicId(doctypeNode) {\r\n        return doctypeNode.publicId;\r\n    },\r\n    getDocumentTypeNodeSystemId(doctypeNode) {\r\n        return doctypeNode.systemId;\r\n    },\r\n    //Node types\r\n    isTextNode(node) {\r\n        return node.nodeName === '#text';\r\n    },\r\n    isCommentNode(node) {\r\n        return node.nodeName === '#comment';\r\n    },\r\n    isDocumentTypeNode(node) {\r\n        return node.nodeName === '#documentType';\r\n    },\r\n    isElementNode(node) {\r\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\r\n    },\r\n    // Source code location\r\n    setNodeSourceCodeLocation(node, location) {\r\n        node.sourceCodeLocation = location;\r\n    },\r\n    getNodeSourceCodeLocation(node) {\r\n        return node.sourceCodeLocation;\r\n    },\r\n    updateNodeSourceCodeLocation(node, endLocation) {\r\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\r\n    },\r\n};\r\n\r\n//Const\r\nconst VALID_DOCTYPE_NAME = 'html';\r\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\r\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\r\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\r\n    '+//silmaril//dtd html pro v0r11 19970101//',\r\n    '-//as//dtd html 3.0 aswedit + extensions//',\r\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\r\n    '-//ietf//dtd html 2.0 level 1//',\r\n    '-//ietf//dtd html 2.0 level 2//',\r\n    '-//ietf//dtd html 2.0 strict level 1//',\r\n    '-//ietf//dtd html 2.0 strict level 2//',\r\n    '-//ietf//dtd html 2.0 strict//',\r\n    '-//ietf//dtd html 2.0//',\r\n    '-//ietf//dtd html 2.1e//',\r\n    '-//ietf//dtd html 3.0//',\r\n    '-//ietf//dtd html 3.2 final//',\r\n    '-//ietf//dtd html 3.2//',\r\n    '-//ietf//dtd html 3//',\r\n    '-//ietf//dtd html level 0//',\r\n    '-//ietf//dtd html level 1//',\r\n    '-//ietf//dtd html level 2//',\r\n    '-//ietf//dtd html level 3//',\r\n    '-//ietf//dtd html strict level 0//',\r\n    '-//ietf//dtd html strict level 1//',\r\n    '-//ietf//dtd html strict level 2//',\r\n    '-//ietf//dtd html strict level 3//',\r\n    '-//ietf//dtd html strict//',\r\n    '-//ietf//dtd html//',\r\n    '-//metrius//dtd metrius presentational//',\r\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\r\n    '-//microsoft//dtd internet explorer 2.0 html//',\r\n    '-//microsoft//dtd internet explorer 2.0 tables//',\r\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\r\n    '-//microsoft//dtd internet explorer 3.0 html//',\r\n    '-//microsoft//dtd internet explorer 3.0 tables//',\r\n    '-//netscape comm. corp.//dtd html//',\r\n    '-//netscape comm. corp.//dtd strict html//',\r\n    \"-//o'reilly and associates//dtd html 2.0//\",\r\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\r\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\r\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\r\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\r\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\r\n    '-//spyglass//dtd html 2.0 extended//',\r\n    '-//sun microsystems corp.//dtd hotjava html//',\r\n    '-//sun microsystems corp.//dtd hotjava strict html//',\r\n    '-//w3c//dtd html 3 1995-03-24//',\r\n    '-//w3c//dtd html 3.2 draft//',\r\n    '-//w3c//dtd html 3.2 final//',\r\n    '-//w3c//dtd html 3.2//',\r\n    '-//w3c//dtd html 3.2s draft//',\r\n    '-//w3c//dtd html 4.0 frameset//',\r\n    '-//w3c//dtd html 4.0 transitional//',\r\n    '-//w3c//dtd html experimental 19960712//',\r\n    '-//w3c//dtd html experimental 970421//',\r\n    '-//w3c//dtd w3 html//',\r\n    '-//w3o//dtd w3 html 3.0//',\r\n    '-//webtechs//dtd mozilla html 2.0//',\r\n    '-//webtechs//dtd mozilla html//',\r\n];\r\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\r\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\r\n    '-//w3c//dtd html 4.01 frameset//',\r\n    '-//w3c//dtd html 4.01 transitional//',\r\n];\r\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\r\n    '-//w3o//dtd w3 html strict 3.0//en//',\r\n    '-/w3c/dtd html 4.0 transitional/en',\r\n    'html',\r\n]);\r\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\r\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\r\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\r\n    '-//w3c//dtd html 4.01 frameset//',\r\n    '-//w3c//dtd html 4.01 transitional//',\r\n];\r\n//Utils\r\nfunction hasPrefix(publicId, prefixes) {\r\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\r\n}\r\n//API\r\nfunction isConforming(token) {\r\n    return (token.name === VALID_DOCTYPE_NAME &&\r\n        token.publicId === null &&\r\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\r\n}\r\nfunction getDocumentMode(token) {\r\n    if (token.name !== VALID_DOCTYPE_NAME) {\r\n        return DOCUMENT_MODE.QUIRKS;\r\n    }\r\n    const { systemId } = token;\r\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\r\n        return DOCUMENT_MODE.QUIRKS;\r\n    }\r\n    let { publicId } = token;\r\n    if (publicId !== null) {\r\n        publicId = publicId.toLowerCase();\r\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\r\n            return DOCUMENT_MODE.QUIRKS;\r\n        }\r\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\r\n        if (hasPrefix(publicId, prefixes)) {\r\n            return DOCUMENT_MODE.QUIRKS;\r\n        }\r\n        prefixes =\r\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\r\n        if (hasPrefix(publicId, prefixes)) {\r\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\r\n        }\r\n    }\r\n    return DOCUMENT_MODE.NO_QUIRKS;\r\n}\r\n\r\n//MIME types\r\nconst MIME_TYPES = {\r\n    TEXT_HTML: 'text/html',\r\n    APPLICATION_XML: 'application/xhtml+xml',\r\n};\r\n//Attributes\r\nconst DEFINITION_URL_ATTR = 'definitionurl';\r\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\r\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\r\n    'attributeName',\r\n    'attributeType',\r\n    'baseFrequency',\r\n    'baseProfile',\r\n    'calcMode',\r\n    'clipPathUnits',\r\n    'diffuseConstant',\r\n    'edgeMode',\r\n    'filterUnits',\r\n    'glyphRef',\r\n    'gradientTransform',\r\n    'gradientUnits',\r\n    'kernelMatrix',\r\n    'kernelUnitLength',\r\n    'keyPoints',\r\n    'keySplines',\r\n    'keyTimes',\r\n    'lengthAdjust',\r\n    'limitingConeAngle',\r\n    'markerHeight',\r\n    'markerUnits',\r\n    'markerWidth',\r\n    'maskContentUnits',\r\n    'maskUnits',\r\n    'numOctaves',\r\n    'pathLength',\r\n    'patternContentUnits',\r\n    'patternTransform',\r\n    'patternUnits',\r\n    'pointsAtX',\r\n    'pointsAtY',\r\n    'pointsAtZ',\r\n    'preserveAlpha',\r\n    'preserveAspectRatio',\r\n    'primitiveUnits',\r\n    'refX',\r\n    'refY',\r\n    'repeatCount',\r\n    'repeatDur',\r\n    'requiredExtensions',\r\n    'requiredFeatures',\r\n    'specularConstant',\r\n    'specularExponent',\r\n    'spreadMethod',\r\n    'startOffset',\r\n    'stdDeviation',\r\n    'stitchTiles',\r\n    'surfaceScale',\r\n    'systemLanguage',\r\n    'tableValues',\r\n    'targetX',\r\n    'targetY',\r\n    'textLength',\r\n    'viewBox',\r\n    'viewTarget',\r\n    'xChannelSelector',\r\n    'yChannelSelector',\r\n    'zoomAndPan',\r\n].map((attr) => [attr.toLowerCase(), attr]));\r\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\r\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\r\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\r\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\r\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\r\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\r\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\r\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\r\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\r\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\r\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\r\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\r\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\r\n]);\r\n//SVG tag names adjustment map\r\nconst SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\r\n    'altGlyph',\r\n    'altGlyphDef',\r\n    'altGlyphItem',\r\n    'animateColor',\r\n    'animateMotion',\r\n    'animateTransform',\r\n    'clipPath',\r\n    'feBlend',\r\n    'feColorMatrix',\r\n    'feComponentTransfer',\r\n    'feComposite',\r\n    'feConvolveMatrix',\r\n    'feDiffuseLighting',\r\n    'feDisplacementMap',\r\n    'feDistantLight',\r\n    'feFlood',\r\n    'feFuncA',\r\n    'feFuncB',\r\n    'feFuncG',\r\n    'feFuncR',\r\n    'feGaussianBlur',\r\n    'feImage',\r\n    'feMerge',\r\n    'feMergeNode',\r\n    'feMorphology',\r\n    'feOffset',\r\n    'fePointLight',\r\n    'feSpecularLighting',\r\n    'feSpotLight',\r\n    'feTile',\r\n    'feTurbulence',\r\n    'foreignObject',\r\n    'glyphRef',\r\n    'linearGradient',\r\n    'radialGradient',\r\n    'textPath',\r\n].map((tn) => [tn.toLowerCase(), tn]));\r\n//Tags that causes exit from foreign content\r\nconst EXITS_FOREIGN_CONTENT = new Set([\r\n    TAG_ID.B,\r\n    TAG_ID.BIG,\r\n    TAG_ID.BLOCKQUOTE,\r\n    TAG_ID.BODY,\r\n    TAG_ID.BR,\r\n    TAG_ID.CENTER,\r\n    TAG_ID.CODE,\r\n    TAG_ID.DD,\r\n    TAG_ID.DIV,\r\n    TAG_ID.DL,\r\n    TAG_ID.DT,\r\n    TAG_ID.EM,\r\n    TAG_ID.EMBED,\r\n    TAG_ID.H1,\r\n    TAG_ID.H2,\r\n    TAG_ID.H3,\r\n    TAG_ID.H4,\r\n    TAG_ID.H5,\r\n    TAG_ID.H6,\r\n    TAG_ID.HEAD,\r\n    TAG_ID.HR,\r\n    TAG_ID.I,\r\n    TAG_ID.IMG,\r\n    TAG_ID.LI,\r\n    TAG_ID.LISTING,\r\n    TAG_ID.MENU,\r\n    TAG_ID.META,\r\n    TAG_ID.NOBR,\r\n    TAG_ID.OL,\r\n    TAG_ID.P,\r\n    TAG_ID.PRE,\r\n    TAG_ID.RUBY,\r\n    TAG_ID.S,\r\n    TAG_ID.SMALL,\r\n    TAG_ID.SPAN,\r\n    TAG_ID.STRONG,\r\n    TAG_ID.STRIKE,\r\n    TAG_ID.SUB,\r\n    TAG_ID.SUP,\r\n    TAG_ID.TABLE,\r\n    TAG_ID.TT,\r\n    TAG_ID.U,\r\n    TAG_ID.UL,\r\n    TAG_ID.VAR,\r\n]);\r\n//Check exit from foreign content\r\nfunction causesExit(startTagToken) {\r\n    const tn = startTagToken.tagID;\r\n    const isFontWithAttrs = tn === TAG_ID.FONT &&\r\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\r\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\r\n}\r\n//Token adjustments\r\nfunction adjustTokenMathMLAttrs(token) {\r\n    for (let i = 0; i < token.attrs.length; i++) {\r\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\r\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction adjustTokenSVGAttrs(token) {\r\n    for (let i = 0; i < token.attrs.length; i++) {\r\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\r\n        if (adjustedAttrName != null) {\r\n            token.attrs[i].name = adjustedAttrName;\r\n        }\r\n    }\r\n}\r\nfunction adjustTokenXMLAttrs(token) {\r\n    for (let i = 0; i < token.attrs.length; i++) {\r\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\r\n        if (adjustedAttrEntry) {\r\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\r\n            token.attrs[i].name = adjustedAttrEntry.name;\r\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\r\n        }\r\n    }\r\n}\r\nfunction adjustTokenSVGTagName(token) {\r\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\r\n    if (adjustedTagName != null) {\r\n        token.tagName = adjustedTagName;\r\n        token.tagID = getTagID(token.tagName);\r\n    }\r\n}\r\n//Integration points\r\nfunction isMathMLTextIntegrationPoint(tn, ns) {\r\n    return ns === NS.MATHML && (tn === TAG_ID.MI || tn === TAG_ID.MO || tn === TAG_ID.MN || tn === TAG_ID.MS || tn === TAG_ID.MTEXT);\r\n}\r\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\r\n    if (ns === NS.MATHML && tn === TAG_ID.ANNOTATION_XML) {\r\n        for (let i = 0; i < attrs.length; i++) {\r\n            if (attrs[i].name === ATTRS.ENCODING) {\r\n                const value = attrs[i].value.toLowerCase();\r\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\r\n            }\r\n        }\r\n    }\r\n    return ns === NS.SVG && (tn === TAG_ID.FOREIGN_OBJECT || tn === TAG_ID.DESC || tn === TAG_ID.TITLE);\r\n}\r\nfunction isIntegrationPoint(tn, ns, attrs, foreignNS) {\r\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\r\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\r\n}\r\n\r\n//Misc constants\r\nconst HIDDEN_INPUT_TYPE = 'hidden';\r\n//Adoption agency loops iteration count\r\nconst AA_OUTER_LOOP_ITER = 8;\r\nconst AA_INNER_LOOP_ITER = 3;\r\n//Insertion modes\r\nvar InsertionMode;\r\n(function (InsertionMode) {\r\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\r\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\r\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\r\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\r\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\r\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\r\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\r\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\r\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\r\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\r\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\r\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\r\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\r\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\r\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\r\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\r\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\r\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\r\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\r\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\r\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\r\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\r\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\r\n})(InsertionMode || (InsertionMode = {}));\r\nconst BASE_LOC = {\r\n    startLine: -1,\r\n    startCol: -1,\r\n    startOffset: -1,\r\n    endLine: -1,\r\n    endCol: -1,\r\n    endOffset: -1,\r\n};\r\nconst TABLE_STRUCTURE_TAGS = new Set([TAG_ID.TABLE, TAG_ID.TBODY, TAG_ID.TFOOT, TAG_ID.THEAD, TAG_ID.TR]);\r\nconst defaultParserOptions = {\r\n    scriptingEnabled: true,\r\n    sourceCodeLocationInfo: false,\r\n    treeAdapter: defaultTreeAdapter,\r\n    onParseError: null,\r\n};\r\n//Parser\r\nclass Parser {\r\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\r\n        this.fragmentContext = fragmentContext;\r\n        this.scriptHandler = scriptHandler;\r\n        this.currentToken = null;\r\n        this.stopped = false;\r\n        this.insertionMode = InsertionMode.INITIAL;\r\n        this.originalInsertionMode = InsertionMode.INITIAL;\r\n        this.headElement = null;\r\n        this.formElement = null;\r\n        /** Indicates that the current node is not an element in the HTML namespace */\r\n        this.currentNotInHTML = false;\r\n        /**\r\n         * The template insertion mode stack is maintained from the left.\r\n         * Ie. the topmost element will always have index 0.\r\n         */\r\n        this.tmplInsertionModeStack = [];\r\n        this.pendingCharacterTokens = [];\r\n        this.hasNonWhitespacePendingCharacterToken = false;\r\n        this.framesetOk = true;\r\n        this.skipNextNewLine = false;\r\n        this.fosterParentingEnabled = false;\r\n        this.options = {\r\n            ...defaultParserOptions,\r\n            ...options,\r\n        };\r\n        this.treeAdapter = this.options.treeAdapter;\r\n        this.onParseError = this.options.onParseError;\r\n        // Always enable location info if we report parse errors.\r\n        if (this.onParseError) {\r\n            this.options.sourceCodeLocationInfo = true;\r\n        }\r\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\r\n        this.tokenizer = new Tokenizer(this.options, this);\r\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\r\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : TAG_ID.UNKNOWN;\r\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\r\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\r\n    }\r\n    // API\r\n    static parse(html, options) {\r\n        const parser = new this(options);\r\n        parser.tokenizer.write(html, true);\r\n        return parser.document;\r\n    }\r\n    static getFragmentParser(fragmentContext, options) {\r\n        const opts = {\r\n            ...defaultParserOptions,\r\n            ...options,\r\n        };\r\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\r\n        //so we will parse in a \"forgiving\" manner\r\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TAG_NAMES.TEMPLATE, NS.HTML, []));\r\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\r\n        //This is important for jsdom, where a new `document` cannot be created. This led to\r\n        //fragment parsing messing with the main `document`.\r\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\r\n        const parser = new this(opts, documentMock, fragmentContext);\r\n        if (parser.fragmentContextID === TAG_ID.TEMPLATE) {\r\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\r\n        }\r\n        parser._initTokenizerForFragmentParsing();\r\n        parser._insertFakeRootElement();\r\n        parser._resetInsertionMode();\r\n        parser._findFormInFragmentContext();\r\n        return parser;\r\n    }\r\n    getFragment() {\r\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\r\n        const fragment = this.treeAdapter.createDocumentFragment();\r\n        this._adoptNodes(rootElement, fragment);\r\n        return fragment;\r\n    }\r\n    //Errors\r\n    _err(token, code, beforeToken) {\r\n        var _a;\r\n        if (!this.onParseError)\r\n            return;\r\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\r\n        const err = {\r\n            code,\r\n            startLine: loc.startLine,\r\n            startCol: loc.startCol,\r\n            startOffset: loc.startOffset,\r\n            endLine: beforeToken ? loc.startLine : loc.endLine,\r\n            endCol: beforeToken ? loc.startCol : loc.endCol,\r\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\r\n        };\r\n        this.onParseError(err);\r\n    }\r\n    //Stack events\r\n    onItemPush(node, tid, isTop) {\r\n        var _a, _b;\r\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\r\n        if (isTop && this.openElements.stackTop > 0)\r\n            this._setContextModes(node, tid);\r\n    }\r\n    onItemPop(node, isTop) {\r\n        var _a, _b;\r\n        if (this.options.sourceCodeLocationInfo) {\r\n            this._setEndLocation(node, this.currentToken);\r\n        }\r\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\r\n        if (isTop) {\r\n            let current;\r\n            let currentTagId;\r\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\r\n                current = this.fragmentContext;\r\n                currentTagId = this.fragmentContextID;\r\n            }\r\n            else {\r\n                ({ current, currentTagId } = this.openElements);\r\n            }\r\n            this._setContextModes(current, currentTagId);\r\n        }\r\n    }\r\n    _setContextModes(current, tid) {\r\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\r\n        this.currentNotInHTML = !isHTML;\r\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\r\n    }\r\n    _switchToTextParsing(currentToken, nextTokenizerState) {\r\n        this._insertElement(currentToken, NS.HTML);\r\n        this.tokenizer.state = nextTokenizerState;\r\n        this.originalInsertionMode = this.insertionMode;\r\n        this.insertionMode = InsertionMode.TEXT;\r\n    }\r\n    switchToPlaintextParsing() {\r\n        this.insertionMode = InsertionMode.TEXT;\r\n        this.originalInsertionMode = InsertionMode.IN_BODY;\r\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\r\n    }\r\n    //Fragment parsing\r\n    _getAdjustedCurrentElement() {\r\n        return this.openElements.stackTop === 0 && this.fragmentContext\r\n            ? this.fragmentContext\r\n            : this.openElements.current;\r\n    }\r\n    _findFormInFragmentContext() {\r\n        let node = this.fragmentContext;\r\n        while (node) {\r\n            if (this.treeAdapter.getTagName(node) === TAG_NAMES.FORM) {\r\n                this.formElement = node;\r\n                break;\r\n            }\r\n            node = this.treeAdapter.getParentNode(node);\r\n        }\r\n    }\r\n    _initTokenizerForFragmentParsing() {\r\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\r\n            return;\r\n        }\r\n        switch (this.fragmentContextID) {\r\n            case TAG_ID.TITLE:\r\n            case TAG_ID.TEXTAREA: {\r\n                this.tokenizer.state = TokenizerMode.RCDATA;\r\n                break;\r\n            }\r\n            case TAG_ID.STYLE:\r\n            case TAG_ID.XMP:\r\n            case TAG_ID.IFRAME:\r\n            case TAG_ID.NOEMBED:\r\n            case TAG_ID.NOFRAMES:\r\n            case TAG_ID.NOSCRIPT: {\r\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\r\n                break;\r\n            }\r\n            case TAG_ID.SCRIPT: {\r\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\r\n                break;\r\n            }\r\n            case TAG_ID.PLAINTEXT: {\r\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\r\n                break;\r\n            }\r\n            // Do nothing\r\n        }\r\n    }\r\n    //Tree mutation\r\n    _setDocumentType(token) {\r\n        const name = token.name || '';\r\n        const publicId = token.publicId || '';\r\n        const systemId = token.systemId || '';\r\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\r\n        if (token.location) {\r\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\r\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\r\n            if (docTypeNode) {\r\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\r\n            }\r\n        }\r\n    }\r\n    _attachElementToTree(element, location) {\r\n        if (this.options.sourceCodeLocationInfo) {\r\n            const loc = location && {\r\n                ...location,\r\n                startTag: location,\r\n            };\r\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\r\n        }\r\n        if (this._shouldFosterParentOnInsertion()) {\r\n            this._fosterParentElement(element);\r\n        }\r\n        else {\r\n            const parent = this.openElements.currentTmplContentOrNode;\r\n            this.treeAdapter.appendChild(parent, element);\r\n        }\r\n    }\r\n    _appendElement(token, namespaceURI) {\r\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\r\n        this._attachElementToTree(element, token.location);\r\n    }\r\n    _insertElement(token, namespaceURI) {\r\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\r\n        this._attachElementToTree(element, token.location);\r\n        this.openElements.push(element, token.tagID);\r\n    }\r\n    _insertFakeElement(tagName, tagID) {\r\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\r\n        this._attachElementToTree(element, null);\r\n        this.openElements.push(element, tagID);\r\n    }\r\n    _insertTemplate(token) {\r\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\r\n        const content = this.treeAdapter.createDocumentFragment();\r\n        this.treeAdapter.setTemplateContent(tmpl, content);\r\n        this._attachElementToTree(tmpl, token.location);\r\n        this.openElements.push(tmpl, token.tagID);\r\n        if (this.options.sourceCodeLocationInfo)\r\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\r\n    }\r\n    _insertFakeRootElement() {\r\n        const element = this.treeAdapter.createElement(TAG_NAMES.HTML, NS.HTML, []);\r\n        if (this.options.sourceCodeLocationInfo)\r\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\r\n        this.treeAdapter.appendChild(this.openElements.current, element);\r\n        this.openElements.push(element, TAG_ID.HTML);\r\n    }\r\n    _appendCommentNode(token, parent) {\r\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\r\n        this.treeAdapter.appendChild(parent, commentNode);\r\n        if (this.options.sourceCodeLocationInfo) {\r\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\r\n        }\r\n    }\r\n    _insertCharacters(token) {\r\n        let parent;\r\n        let beforeElement;\r\n        if (this._shouldFosterParentOnInsertion()) {\r\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\r\n            if (beforeElement) {\r\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\r\n            }\r\n            else {\r\n                this.treeAdapter.insertText(parent, token.chars);\r\n            }\r\n        }\r\n        else {\r\n            parent = this.openElements.currentTmplContentOrNode;\r\n            this.treeAdapter.insertText(parent, token.chars);\r\n        }\r\n        if (!token.location)\r\n            return;\r\n        const siblings = this.treeAdapter.getChildNodes(parent);\r\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\r\n        const textNode = siblings[textNodeIdx - 1];\r\n        //NOTE: if we have a location assigned by another token, then just update the end position\r\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\r\n        if (tnLoc) {\r\n            const { endLine, endCol, endOffset } = token.location;\r\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\r\n        }\r\n        else if (this.options.sourceCodeLocationInfo) {\r\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\r\n        }\r\n    }\r\n    _adoptNodes(donor, recipient) {\r\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\r\n            this.treeAdapter.detachNode(child);\r\n            this.treeAdapter.appendChild(recipient, child);\r\n        }\r\n    }\r\n    _setEndLocation(element, closingToken) {\r\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\r\n            const ctLoc = closingToken.location;\r\n            const tn = this.treeAdapter.getTagName(element);\r\n            const endLoc = \r\n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\r\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\r\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\r\n                ? {\r\n                    endTag: { ...ctLoc },\r\n                    endLine: ctLoc.endLine,\r\n                    endCol: ctLoc.endCol,\r\n                    endOffset: ctLoc.endOffset,\r\n                }\r\n                : {\r\n                    endLine: ctLoc.startLine,\r\n                    endCol: ctLoc.startCol,\r\n                    endOffset: ctLoc.startOffset,\r\n                };\r\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\r\n        }\r\n    }\r\n    //Token processing\r\n    shouldProcessStartTagTokenInForeignContent(token) {\r\n        // Check that neither current === document, or ns === NS.HTML\r\n        if (!this.currentNotInHTML)\r\n            return false;\r\n        let current;\r\n        let currentTagId;\r\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\r\n            current = this.fragmentContext;\r\n            currentTagId = this.fragmentContextID;\r\n        }\r\n        else {\r\n            ({ current, currentTagId } = this.openElements);\r\n        }\r\n        if (token.tagID === TAG_ID.SVG &&\r\n            this.treeAdapter.getTagName(current) === TAG_NAMES.ANNOTATION_XML &&\r\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\r\n            return false;\r\n        }\r\n        return (\r\n        // Check that `current` is not an integration point for HTML or MathML elements.\r\n        this.tokenizer.inForeignNode ||\r\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\r\n            // integration point.\r\n            ((token.tagID === TAG_ID.MGLYPH || token.tagID === TAG_ID.MALIGNMARK) &&\r\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\r\n    }\r\n    _processToken(token) {\r\n        switch (token.type) {\r\n            case TokenType.CHARACTER: {\r\n                this.onCharacter(token);\r\n                break;\r\n            }\r\n            case TokenType.NULL_CHARACTER: {\r\n                this.onNullCharacter(token);\r\n                break;\r\n            }\r\n            case TokenType.COMMENT: {\r\n                this.onComment(token);\r\n                break;\r\n            }\r\n            case TokenType.DOCTYPE: {\r\n                this.onDoctype(token);\r\n                break;\r\n            }\r\n            case TokenType.START_TAG: {\r\n                this._processStartTag(token);\r\n                break;\r\n            }\r\n            case TokenType.END_TAG: {\r\n                this.onEndTag(token);\r\n                break;\r\n            }\r\n            case TokenType.EOF: {\r\n                this.onEof(token);\r\n                break;\r\n            }\r\n            case TokenType.WHITESPACE_CHARACTER: {\r\n                this.onWhitespaceCharacter(token);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    //Integration points\r\n    _isIntegrationPoint(tid, element, foreignNS) {\r\n        const ns = this.treeAdapter.getNamespaceURI(element);\r\n        const attrs = this.treeAdapter.getAttrList(element);\r\n        return isIntegrationPoint(tid, ns, attrs, foreignNS);\r\n    }\r\n    //Active formatting elements reconstruction\r\n    _reconstructActiveFormattingElements() {\r\n        const listLength = this.activeFormattingElements.entries.length;\r\n        if (listLength) {\r\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\r\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\r\n            for (let i = unopenIdx; i >= 0; i--) {\r\n                const entry = this.activeFormattingElements.entries[i];\r\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\r\n                entry.element = this.openElements.current;\r\n            }\r\n        }\r\n    }\r\n    //Close elements\r\n    _closeTableCell() {\r\n        this.openElements.generateImpliedEndTags();\r\n        this.openElements.popUntilTableCellPopped();\r\n        this.activeFormattingElements.clearToLastMarker();\r\n        this.insertionMode = InsertionMode.IN_ROW;\r\n    }\r\n    _closePElement() {\r\n        this.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.P);\r\n        this.openElements.popUntilTagNamePopped(TAG_ID.P);\r\n    }\r\n    //Insertion modes\r\n    _resetInsertionMode() {\r\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\r\n            //Insertion mode reset map\r\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\r\n                case TAG_ID.TR: {\r\n                    this.insertionMode = InsertionMode.IN_ROW;\r\n                    return;\r\n                }\r\n                case TAG_ID.TBODY:\r\n                case TAG_ID.THEAD:\r\n                case TAG_ID.TFOOT: {\r\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                    return;\r\n                }\r\n                case TAG_ID.CAPTION: {\r\n                    this.insertionMode = InsertionMode.IN_CAPTION;\r\n                    return;\r\n                }\r\n                case TAG_ID.COLGROUP: {\r\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n                    return;\r\n                }\r\n                case TAG_ID.TABLE: {\r\n                    this.insertionMode = InsertionMode.IN_TABLE;\r\n                    return;\r\n                }\r\n                case TAG_ID.BODY: {\r\n                    this.insertionMode = InsertionMode.IN_BODY;\r\n                    return;\r\n                }\r\n                case TAG_ID.FRAMESET: {\r\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\r\n                    return;\r\n                }\r\n                case TAG_ID.SELECT: {\r\n                    this._resetInsertionModeForSelect(i);\r\n                    return;\r\n                }\r\n                case TAG_ID.TEMPLATE: {\r\n                    this.insertionMode = this.tmplInsertionModeStack[0];\r\n                    return;\r\n                }\r\n                case TAG_ID.HTML: {\r\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\r\n                    return;\r\n                }\r\n                case TAG_ID.TD:\r\n                case TAG_ID.TH: {\r\n                    if (i > 0) {\r\n                        this.insertionMode = InsertionMode.IN_CELL;\r\n                        return;\r\n                    }\r\n                    break;\r\n                }\r\n                case TAG_ID.HEAD: {\r\n                    if (i > 0) {\r\n                        this.insertionMode = InsertionMode.IN_HEAD;\r\n                        return;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.insertionMode = InsertionMode.IN_BODY;\r\n    }\r\n    _resetInsertionModeForSelect(selectIdx) {\r\n        if (selectIdx > 0) {\r\n            for (let i = selectIdx - 1; i > 0; i--) {\r\n                const tn = this.openElements.tagIDs[i];\r\n                if (tn === TAG_ID.TEMPLATE) {\r\n                    break;\r\n                }\r\n                else if (tn === TAG_ID.TABLE) {\r\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.insertionMode = InsertionMode.IN_SELECT;\r\n    }\r\n    //Foster parenting\r\n    _isElementCausesFosterParenting(tn) {\r\n        return TABLE_STRUCTURE_TAGS.has(tn);\r\n    }\r\n    _shouldFosterParentOnInsertion() {\r\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\r\n    }\r\n    _findFosterParentingLocation() {\r\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\r\n            const openElement = this.openElements.items[i];\r\n            switch (this.openElements.tagIDs[i]) {\r\n                case TAG_ID.TEMPLATE: {\r\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\r\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\r\n                    }\r\n                    break;\r\n                }\r\n                case TAG_ID.TABLE: {\r\n                    const parent = this.treeAdapter.getParentNode(openElement);\r\n                    if (parent) {\r\n                        return { parent, beforeElement: openElement };\r\n                    }\r\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\r\n                }\r\n                // Do nothing\r\n            }\r\n        }\r\n        return { parent: this.openElements.items[0], beforeElement: null };\r\n    }\r\n    _fosterParentElement(element) {\r\n        const location = this._findFosterParentingLocation();\r\n        if (location.beforeElement) {\r\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\r\n        }\r\n        else {\r\n            this.treeAdapter.appendChild(location.parent, element);\r\n        }\r\n    }\r\n    //Special elements\r\n    _isSpecialElement(element, id) {\r\n        const ns = this.treeAdapter.getNamespaceURI(element);\r\n        return SPECIAL_ELEMENTS[ns].has(id);\r\n    }\r\n    onCharacter(token) {\r\n        this.skipNextNewLine = false;\r\n        if (this.tokenizer.inForeignNode) {\r\n            characterInForeignContent(this, token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                tokenBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                tokenBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                tokenInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                tokenInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                tokenAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                characterInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                this._insertCharacters(token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW: {\r\n                characterInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                characterInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                tokenInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                tokenAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                tokenAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            // Do nothing\r\n        }\r\n    }\r\n    onNullCharacter(token) {\r\n        this.skipNextNewLine = false;\r\n        if (this.tokenizer.inForeignNode) {\r\n            nullCharacterInForeignContent(this, token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                tokenBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                tokenBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                tokenInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                tokenInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                tokenAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT: {\r\n                this._insertCharacters(token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW: {\r\n                characterInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                tokenInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                tokenAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                tokenAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            // Do nothing\r\n        }\r\n    }\r\n    onComment(token) {\r\n        this.skipNextNewLine = false;\r\n        if (this.currentNotInHTML) {\r\n            appendComment(this, token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL:\r\n            case InsertionMode.BEFORE_HTML:\r\n            case InsertionMode.BEFORE_HEAD:\r\n            case InsertionMode.IN_HEAD:\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\r\n            case InsertionMode.AFTER_HEAD:\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_COLUMN_GROUP:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE:\r\n            case InsertionMode.IN_TEMPLATE:\r\n            case InsertionMode.IN_FRAMESET:\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                appendComment(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                appendCommentToRootHtmlElement(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                appendCommentToDocument(this, token);\r\n                break;\r\n            }\r\n            // Do nothing\r\n        }\r\n    }\r\n    onDoctype(token) {\r\n        this.skipNextNewLine = false;\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                doctypeInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD:\r\n            case InsertionMode.IN_HEAD:\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\r\n            case InsertionMode.AFTER_HEAD: {\r\n                this._err(token, ERR.misplacedDoctype);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            // Do nothing\r\n        }\r\n    }\r\n    onStartTag(token) {\r\n        this.skipNextNewLine = false;\r\n        this.currentToken = token;\r\n        this._processStartTag(token);\r\n        if (token.selfClosing && !token.ackSelfClosing) {\r\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\r\n        }\r\n    }\r\n    /**\r\n     * Processes a given start tag.\r\n     *\r\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\r\n     * is moved inbetween multiple insertion modes, this check for self-closing\r\n     * could lead to false positives. To avoid this, `_processStartTag` is used\r\n     * for nested calls.\r\n     *\r\n     * @param token The token to process.\r\n     */\r\n    _processStartTag(token) {\r\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\r\n            startTagInForeignContent(this, token);\r\n        }\r\n        else {\r\n            this._startTagOutsideForeignContent(token);\r\n        }\r\n    }\r\n    _startTagOutsideForeignContent(token) {\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                startTagBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                startTagBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                startTagInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                startTagInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                startTagAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY: {\r\n                startTagInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE: {\r\n                startTagInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CAPTION: {\r\n                startTagInCaption(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                startTagInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_BODY: {\r\n                startTagInTableBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_ROW: {\r\n                startTagInRow(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CELL: {\r\n                startTagInCell(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT: {\r\n                startTagInSelect(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                startTagInSelectInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                startTagInTemplate(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                startTagAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_FRAMESET: {\r\n                startTagInFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                startTagAfterFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                startTagAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                startTagAfterAfterFrameset(this, token);\r\n                break;\r\n            }\r\n            // Do nothing\r\n        }\r\n    }\r\n    onEndTag(token) {\r\n        this.skipNextNewLine = false;\r\n        this.currentToken = token;\r\n        if (this.currentNotInHTML) {\r\n            endTagInForeignContent(this, token);\r\n        }\r\n        else {\r\n            this._endTagOutsideForeignContent(token);\r\n        }\r\n    }\r\n    _endTagOutsideForeignContent(token) {\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                endTagBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                endTagBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                endTagInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                endTagInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                endTagAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY: {\r\n                endTagInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT: {\r\n                endTagInText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE: {\r\n                endTagInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CAPTION: {\r\n                endTagInCaption(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_COLUMN_GROUP: {\r\n                endTagInColumnGroup(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_BODY: {\r\n                endTagInTableBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_ROW: {\r\n                endTagInRow(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_CELL: {\r\n                endTagInCell(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT: {\r\n                endTagInSelect(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                endTagInSelectInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                endTagInTemplate(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY: {\r\n                endTagAfterBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_FRAMESET: {\r\n                endTagInFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                endTagAfterFrameset(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_AFTER_BODY: {\r\n                tokenAfterAfterBody(this, token);\r\n                break;\r\n            }\r\n            // Do nothing\r\n        }\r\n    }\r\n    onEof(token) {\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.INITIAL: {\r\n                tokenInInitialMode(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HTML: {\r\n                tokenBeforeHtml(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.BEFORE_HEAD: {\r\n                tokenBeforeHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD: {\r\n                tokenInHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\r\n                tokenInHeadNoScript(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_HEAD: {\r\n                tokenAfterHead(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_COLUMN_GROUP:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE: {\r\n                eofInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.TEXT: {\r\n                eofInText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                tokenInTableText(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TEMPLATE: {\r\n                eofInTemplate(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.AFTER_BODY:\r\n            case InsertionMode.IN_FRAMESET:\r\n            case InsertionMode.AFTER_FRAMESET:\r\n            case InsertionMode.AFTER_AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                stopParsing(this, token);\r\n                break;\r\n            }\r\n            // Do nothing\r\n        }\r\n    }\r\n    onWhitespaceCharacter(token) {\r\n        if (this.skipNextNewLine) {\r\n            this.skipNextNewLine = false;\r\n            if (token.chars.charCodeAt(0) === CODE_POINTS.LINE_FEED) {\r\n                if (token.chars.length === 1) {\r\n                    return;\r\n                }\r\n                token.chars = token.chars.substr(1);\r\n            }\r\n        }\r\n        if (this.tokenizer.inForeignNode) {\r\n            this._insertCharacters(token);\r\n            return;\r\n        }\r\n        switch (this.insertionMode) {\r\n            case InsertionMode.IN_HEAD:\r\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\r\n            case InsertionMode.AFTER_HEAD:\r\n            case InsertionMode.TEXT:\r\n            case InsertionMode.IN_COLUMN_GROUP:\r\n            case InsertionMode.IN_SELECT:\r\n            case InsertionMode.IN_SELECT_IN_TABLE:\r\n            case InsertionMode.IN_FRAMESET:\r\n            case InsertionMode.AFTER_FRAMESET: {\r\n                this._insertCharacters(token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_BODY:\r\n            case InsertionMode.IN_CAPTION:\r\n            case InsertionMode.IN_CELL:\r\n            case InsertionMode.IN_TEMPLATE:\r\n            case InsertionMode.AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_BODY:\r\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\r\n                whitespaceCharacterInBody(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE:\r\n            case InsertionMode.IN_TABLE_BODY:\r\n            case InsertionMode.IN_ROW: {\r\n                characterInTable(this, token);\r\n                break;\r\n            }\r\n            case InsertionMode.IN_TABLE_TEXT: {\r\n                whitespaceCharacterInTableText(this, token);\r\n                break;\r\n            }\r\n            // Do nothing\r\n        }\r\n    }\r\n}\r\n//Adoption agency algorithm\r\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\r\n//------------------------------------------------------------------\r\n//Steps 5-8 of the algorithm\r\nfunction aaObtainFormattingElementEntry(p, token) {\r\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\r\n    if (formattingElementEntry) {\r\n        if (!p.openElements.contains(formattingElementEntry.element)) {\r\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n            formattingElementEntry = null;\r\n        }\r\n        else if (!p.openElements.hasInScope(token.tagID)) {\r\n            formattingElementEntry = null;\r\n        }\r\n    }\r\n    else {\r\n        genericEndTagInBody(p, token);\r\n    }\r\n    return formattingElementEntry;\r\n}\r\n//Steps 9 and 10 of the algorithm\r\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\r\n    let furthestBlock = null;\r\n    let idx = p.openElements.stackTop;\r\n    for (; idx >= 0; idx--) {\r\n        const element = p.openElements.items[idx];\r\n        if (element === formattingElementEntry.element) {\r\n            break;\r\n        }\r\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\r\n            furthestBlock = element;\r\n        }\r\n    }\r\n    if (!furthestBlock) {\r\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\r\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n    }\r\n    return furthestBlock;\r\n}\r\n//Step 13 of the algorithm\r\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\r\n    let lastElement = furthestBlock;\r\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\r\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\r\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\r\n        nextElement = p.openElements.getCommonAncestor(element);\r\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\r\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\r\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\r\n        if (shouldRemoveFromOpenElements) {\r\n            if (counterOverflow) {\r\n                p.activeFormattingElements.removeEntry(elementEntry);\r\n            }\r\n            p.openElements.remove(element);\r\n        }\r\n        else {\r\n            element = aaRecreateElementFromEntry(p, elementEntry);\r\n            if (lastElement === furthestBlock) {\r\n                p.activeFormattingElements.bookmark = elementEntry;\r\n            }\r\n            p.treeAdapter.detachNode(lastElement);\r\n            p.treeAdapter.appendChild(element, lastElement);\r\n            lastElement = element;\r\n        }\r\n    }\r\n    return lastElement;\r\n}\r\n//Step 13.7 of the algorithm\r\nfunction aaRecreateElementFromEntry(p, elementEntry) {\r\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\r\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\r\n    p.openElements.replace(elementEntry.element, newElement);\r\n    elementEntry.element = newElement;\r\n    return newElement;\r\n}\r\n//Step 14 of the algorithm\r\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\r\n    const tn = p.treeAdapter.getTagName(commonAncestor);\r\n    const tid = getTagID(tn);\r\n    if (p._isElementCausesFosterParenting(tid)) {\r\n        p._fosterParentElement(lastElement);\r\n    }\r\n    else {\r\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\r\n        if (tid === TAG_ID.TEMPLATE && ns === NS.HTML) {\r\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\r\n        }\r\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\r\n    }\r\n}\r\n//Steps 15-19 of the algorithm\r\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\r\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\r\n    const { token } = formattingElementEntry;\r\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\r\n    p._adoptNodes(furthestBlock, newElement);\r\n    p.treeAdapter.appendChild(furthestBlock, newElement);\r\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\r\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\r\n    p.openElements.remove(formattingElementEntry.element);\r\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\r\n}\r\n//Algorithm entry point\r\nfunction callAdoptionAgency(p, token) {\r\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\r\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\r\n        if (!formattingElementEntry) {\r\n            break;\r\n        }\r\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\r\n        if (!furthestBlock) {\r\n            break;\r\n        }\r\n        p.activeFormattingElements.bookmark = formattingElementEntry;\r\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\r\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\r\n        p.treeAdapter.detachNode(lastElement);\r\n        if (commonAncestor)\r\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\r\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\r\n    }\r\n}\r\n//Generic token handlers\r\n//------------------------------------------------------------------\r\nfunction appendComment(p, token) {\r\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\r\n}\r\nfunction appendCommentToRootHtmlElement(p, token) {\r\n    p._appendCommentNode(token, p.openElements.items[0]);\r\n}\r\nfunction appendCommentToDocument(p, token) {\r\n    p._appendCommentNode(token, p.document);\r\n}\r\nfunction stopParsing(p, token) {\r\n    p.stopped = true;\r\n    // NOTE: Set end locations for elements that remain on the open element stack.\r\n    if (token.location) {\r\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\r\n        // This is a problem, as we might overwrite their end position here.\r\n        const target = p.fragmentContext ? 0 : 2;\r\n        for (let i = p.openElements.stackTop; i >= target; i--) {\r\n            p._setEndLocation(p.openElements.items[i], token);\r\n        }\r\n        // Handle `html` and `body`\r\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\r\n            const htmlElement = p.openElements.items[0];\r\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\r\n            if (htmlLocation && !htmlLocation.endTag) {\r\n                p._setEndLocation(htmlElement, token);\r\n                if (p.openElements.stackTop >= 1) {\r\n                    const bodyElement = p.openElements.items[1];\r\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\r\n                    if (bodyLocation && !bodyLocation.endTag) {\r\n                        p._setEndLocation(bodyElement, token);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// The \"initial\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction doctypeInInitialMode(p, token) {\r\n    p._setDocumentType(token);\r\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : getDocumentMode(token);\r\n    if (!isConforming(token)) {\r\n        p._err(token, ERR.nonConformingDoctype);\r\n    }\r\n    p.treeAdapter.setDocumentMode(p.document, mode);\r\n    p.insertionMode = InsertionMode.BEFORE_HTML;\r\n}\r\nfunction tokenInInitialMode(p, token) {\r\n    p._err(token, ERR.missingDoctype, true);\r\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\r\n    p.insertionMode = InsertionMode.BEFORE_HTML;\r\n    p._processToken(token);\r\n}\r\n// The \"before html\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagBeforeHtml(p, token) {\r\n    if (token.tagID === TAG_ID.HTML) {\r\n        p._insertElement(token, NS.HTML);\r\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\r\n    }\r\n    else {\r\n        tokenBeforeHtml(p, token);\r\n    }\r\n}\r\nfunction endTagBeforeHtml(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === TAG_ID.HTML || tn === TAG_ID.HEAD || tn === TAG_ID.BODY || tn === TAG_ID.BR) {\r\n        tokenBeforeHtml(p, token);\r\n    }\r\n}\r\nfunction tokenBeforeHtml(p, token) {\r\n    p._insertFakeRootElement();\r\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"before head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagBeforeHead(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.HEAD: {\r\n            p._insertElement(token, NS.HTML);\r\n            p.headElement = p.openElements.current;\r\n            p.insertionMode = InsertionMode.IN_HEAD;\r\n            break;\r\n        }\r\n        default: {\r\n            tokenBeforeHead(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagBeforeHead(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === TAG_ID.HEAD || tn === TAG_ID.BODY || tn === TAG_ID.HTML || tn === TAG_ID.BR) {\r\n        tokenBeforeHead(p, token);\r\n    }\r\n    else {\r\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n    }\r\n}\r\nfunction tokenBeforeHead(p, token) {\r\n    p._insertFakeElement(TAG_NAMES.HEAD, TAG_ID.HEAD);\r\n    p.headElement = p.openElements.current;\r\n    p.insertionMode = InsertionMode.IN_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"in head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInHead(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.BASE:\r\n        case TAG_ID.BASEFONT:\r\n        case TAG_ID.BGSOUND:\r\n        case TAG_ID.LINK:\r\n        case TAG_ID.META: {\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case TAG_ID.TITLE: {\r\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\r\n            break;\r\n        }\r\n        case TAG_ID.NOSCRIPT: {\r\n            if (p.options.scriptingEnabled) {\r\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n            }\r\n            else {\r\n                p._insertElement(token, NS.HTML);\r\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.NOFRAMES:\r\n        case TAG_ID.STYLE: {\r\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n            break;\r\n        }\r\n        case TAG_ID.SCRIPT: {\r\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\r\n            break;\r\n        }\r\n        case TAG_ID.TEMPLATE: {\r\n            p._insertTemplate(token);\r\n            p.activeFormattingElements.insertMarker();\r\n            p.framesetOk = false;\r\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\r\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\r\n            break;\r\n        }\r\n        case TAG_ID.HEAD: {\r\n            p._err(token, ERR.misplacedStartTagForHeadElement);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInHead(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInHead(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.HEAD: {\r\n            p.openElements.pop();\r\n            p.insertionMode = InsertionMode.AFTER_HEAD;\r\n            break;\r\n        }\r\n        case TAG_ID.BODY:\r\n        case TAG_ID.BR:\r\n        case TAG_ID.HTML: {\r\n            tokenInHead(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n        }\r\n    }\r\n}\r\nfunction templateEndTagInHead(p, token) {\r\n    if (p.openElements.tmplCount > 0) {\r\n        p.openElements.generateImpliedEndTagsThoroughly();\r\n        if (p.openElements.currentTagId !== TAG_ID.TEMPLATE) {\r\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\r\n        }\r\n        p.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n        p.tmplInsertionModeStack.shift();\r\n        p._resetInsertionMode();\r\n    }\r\n    else {\r\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n    }\r\n}\r\nfunction tokenInHead(p, token) {\r\n    p.openElements.pop();\r\n    p.insertionMode = InsertionMode.AFTER_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"in head no script\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInHeadNoScript(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.BASEFONT:\r\n        case TAG_ID.BGSOUND:\r\n        case TAG_ID.HEAD:\r\n        case TAG_ID.LINK:\r\n        case TAG_ID.META:\r\n        case TAG_ID.NOFRAMES:\r\n        case TAG_ID.STYLE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.NOSCRIPT: {\r\n            p._err(token, ERR.nestedNoscriptInHead);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInHeadNoScript(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInHeadNoScript(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.NOSCRIPT: {\r\n            p.openElements.pop();\r\n            p.insertionMode = InsertionMode.IN_HEAD;\r\n            break;\r\n        }\r\n        case TAG_ID.BR: {\r\n            tokenInHeadNoScript(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n        }\r\n    }\r\n}\r\nfunction tokenInHeadNoScript(p, token) {\r\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\r\n    p._err(token, errCode);\r\n    p.openElements.pop();\r\n    p.insertionMode = InsertionMode.IN_HEAD;\r\n    p._processToken(token);\r\n}\r\n// The \"after head\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterHead(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.BODY: {\r\n            p._insertElement(token, NS.HTML);\r\n            p.framesetOk = false;\r\n            p.insertionMode = InsertionMode.IN_BODY;\r\n            break;\r\n        }\r\n        case TAG_ID.FRAMESET: {\r\n            p._insertElement(token, NS.HTML);\r\n            p.insertionMode = InsertionMode.IN_FRAMESET;\r\n            break;\r\n        }\r\n        case TAG_ID.BASE:\r\n        case TAG_ID.BASEFONT:\r\n        case TAG_ID.BGSOUND:\r\n        case TAG_ID.LINK:\r\n        case TAG_ID.META:\r\n        case TAG_ID.NOFRAMES:\r\n        case TAG_ID.SCRIPT:\r\n        case TAG_ID.STYLE:\r\n        case TAG_ID.TEMPLATE:\r\n        case TAG_ID.TITLE: {\r\n            p._err(token, ERR.abandonedHeadElementChild);\r\n            p.openElements.push(p.headElement, TAG_ID.HEAD);\r\n            startTagInHead(p, token);\r\n            p.openElements.remove(p.headElement);\r\n            break;\r\n        }\r\n        case TAG_ID.HEAD: {\r\n            p._err(token, ERR.misplacedStartTagForHeadElement);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenAfterHead(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagAfterHead(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.BODY:\r\n        case TAG_ID.HTML:\r\n        case TAG_ID.BR: {\r\n            tokenAfterHead(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\r\n        }\r\n    }\r\n}\r\nfunction tokenAfterHead(p, token) {\r\n    p._insertFakeElement(TAG_NAMES.BODY, TAG_ID.BODY);\r\n    p.insertionMode = InsertionMode.IN_BODY;\r\n    modeInBody(p, token);\r\n}\r\n// The \"in body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction modeInBody(p, token) {\r\n    switch (token.type) {\r\n        case TokenType.CHARACTER: {\r\n            characterInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.WHITESPACE_CHARACTER: {\r\n            whitespaceCharacterInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.COMMENT: {\r\n            appendComment(p, token);\r\n            break;\r\n        }\r\n        case TokenType.START_TAG: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.END_TAG: {\r\n            endTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TokenType.EOF: {\r\n            eofInBody(p, token);\r\n            break;\r\n        }\r\n        // Do nothing\r\n    }\r\n}\r\nfunction whitespaceCharacterInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertCharacters(token);\r\n}\r\nfunction characterInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertCharacters(token);\r\n    p.framesetOk = false;\r\n}\r\nfunction htmlStartTagInBody(p, token) {\r\n    if (p.openElements.tmplCount === 0) {\r\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\r\n    }\r\n}\r\nfunction bodyStartTagInBody(p, token) {\r\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n    if (bodyElement && p.openElements.tmplCount === 0) {\r\n        p.framesetOk = false;\r\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\r\n    }\r\n}\r\nfunction framesetStartTagInBody(p, token) {\r\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n    if (p.framesetOk && bodyElement) {\r\n        p.treeAdapter.detachNode(bodyElement);\r\n        p.openElements.popAllUpToHtmlElement();\r\n        p._insertElement(token, NS.HTML);\r\n        p.insertionMode = InsertionMode.IN_FRAMESET;\r\n    }\r\n}\r\nfunction addressStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction numberedHeaderStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\r\n        p._closePElement();\r\n    }\r\n    if (isNumberedHeader(p.openElements.currentTagId)) {\r\n        p.openElements.pop();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction preStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\r\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\r\n    p.skipNextNewLine = true;\r\n    p.framesetOk = false;\r\n}\r\nfunction formStartTagInBody(p, token) {\r\n    const inTemplate = p.openElements.tmplCount > 0;\r\n    if (!p.formElement || inTemplate) {\r\n        if (p.openElements.hasInButtonScope(TAG_ID.P)) {\r\n            p._closePElement();\r\n        }\r\n        p._insertElement(token, NS.HTML);\r\n        if (!inTemplate) {\r\n            p.formElement = p.openElements.current;\r\n        }\r\n    }\r\n}\r\nfunction listItemStartTagInBody(p, token) {\r\n    p.framesetOk = false;\r\n    const tn = token.tagID;\r\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\r\n        const elementId = p.openElements.tagIDs[i];\r\n        if ((tn === TAG_ID.LI && elementId === TAG_ID.LI) ||\r\n            ((tn === TAG_ID.DD || tn === TAG_ID.DT) && (elementId === TAG_ID.DD || elementId === TAG_ID.DT))) {\r\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\r\n            p.openElements.popUntilTagNamePopped(elementId);\r\n            break;\r\n        }\r\n        if (elementId !== TAG_ID.ADDRESS &&\r\n            elementId !== TAG_ID.DIV &&\r\n            elementId !== TAG_ID.P &&\r\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\r\n            break;\r\n        }\r\n    }\r\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction plaintextStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\r\n}\r\nfunction buttonStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope(TAG_ID.BUTTON)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped(TAG_ID.BUTTON);\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n}\r\nfunction aStartTagInBody(p, token) {\r\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TAG_NAMES.A);\r\n    if (activeElementEntry) {\r\n        callAdoptionAgency(p, token);\r\n        p.openElements.remove(activeElementEntry.element);\r\n        p.activeFormattingElements.removeEntry(activeElementEntry);\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\nfunction bStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\nfunction nobrStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    if (p.openElements.hasInScope(TAG_ID.NOBR)) {\r\n        callAdoptionAgency(p, token);\r\n        p._reconstructActiveFormattingElements();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\r\n}\r\nfunction appletStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.activeFormattingElements.insertMarker();\r\n    p.framesetOk = false;\r\n}\r\nfunction tableStartTagInBody(p, token) {\r\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope(TAG_ID.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    p.insertionMode = InsertionMode.IN_TABLE;\r\n}\r\nfunction areaStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._appendElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction isHiddenInput(token) {\r\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\r\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\r\n}\r\nfunction inputStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._appendElement(token, NS.HTML);\r\n    if (!isHiddenInput(token)) {\r\n        p.framesetOk = false;\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction paramStartTagInBody(p, token) {\r\n    p._appendElement(token, NS.HTML);\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction hrStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._appendElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction imageStartTagInBody(p, token) {\r\n    token.tagName = TAG_NAMES.IMG;\r\n    token.tagID = TAG_ID.IMG;\r\n    areaStartTagInBody(p, token);\r\n}\r\nfunction textareaStartTagInBody(p, token) {\r\n    p._insertElement(token, NS.HTML);\r\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\r\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\r\n    p.skipNextNewLine = true;\r\n    p.tokenizer.state = TokenizerMode.RCDATA;\r\n    p.originalInsertionMode = p.insertionMode;\r\n    p.framesetOk = false;\r\n    p.insertionMode = InsertionMode.TEXT;\r\n}\r\nfunction xmpStartTagInBody(p, token) {\r\n    if (p.openElements.hasInButtonScope(TAG_ID.P)) {\r\n        p._closePElement();\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p.framesetOk = false;\r\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n}\r\nfunction iframeStartTagInBody(p, token) {\r\n    p.framesetOk = false;\r\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n}\r\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\r\n//<noembed> as rawtext.\r\nfunction noembedStartTagInBody(p, token) {\r\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\r\n}\r\nfunction selectStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n    p.framesetOk = false;\r\n    p.insertionMode =\r\n        p.insertionMode === InsertionMode.IN_TABLE ||\r\n            p.insertionMode === InsertionMode.IN_CAPTION ||\r\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\r\n            p.insertionMode === InsertionMode.IN_ROW ||\r\n            p.insertionMode === InsertionMode.IN_CELL\r\n            ? InsertionMode.IN_SELECT_IN_TABLE\r\n            : InsertionMode.IN_SELECT;\r\n}\r\nfunction optgroupStartTagInBody(p, token) {\r\n    if (p.openElements.currentTagId === TAG_ID.OPTION) {\r\n        p.openElements.pop();\r\n    }\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction rbStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope(TAG_ID.RUBY)) {\r\n        p.openElements.generateImpliedEndTags();\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction rtStartTagInBody(p, token) {\r\n    if (p.openElements.hasInScope(TAG_ID.RUBY)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.RTC);\r\n    }\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction mathStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    adjustTokenMathMLAttrs(token);\r\n    adjustTokenXMLAttrs(token);\r\n    if (token.selfClosing) {\r\n        p._appendElement(token, NS.MATHML);\r\n    }\r\n    else {\r\n        p._insertElement(token, NS.MATHML);\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction svgStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    adjustTokenSVGAttrs(token);\r\n    adjustTokenXMLAttrs(token);\r\n    if (token.selfClosing) {\r\n        p._appendElement(token, NS.SVG);\r\n    }\r\n    else {\r\n        p._insertElement(token, NS.SVG);\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction genericStartTagInBody(p, token) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertElement(token, NS.HTML);\r\n}\r\nfunction startTagInBody(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.I:\r\n        case TAG_ID.S:\r\n        case TAG_ID.B:\r\n        case TAG_ID.U:\r\n        case TAG_ID.EM:\r\n        case TAG_ID.TT:\r\n        case TAG_ID.BIG:\r\n        case TAG_ID.CODE:\r\n        case TAG_ID.FONT:\r\n        case TAG_ID.SMALL:\r\n        case TAG_ID.STRIKE:\r\n        case TAG_ID.STRONG: {\r\n            bStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.A: {\r\n            aStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.H1:\r\n        case TAG_ID.H2:\r\n        case TAG_ID.H3:\r\n        case TAG_ID.H4:\r\n        case TAG_ID.H5:\r\n        case TAG_ID.H6: {\r\n            numberedHeaderStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.P:\r\n        case TAG_ID.DL:\r\n        case TAG_ID.OL:\r\n        case TAG_ID.UL:\r\n        case TAG_ID.DIV:\r\n        case TAG_ID.DIR:\r\n        case TAG_ID.NAV:\r\n        case TAG_ID.MAIN:\r\n        case TAG_ID.MENU:\r\n        case TAG_ID.ASIDE:\r\n        case TAG_ID.CENTER:\r\n        case TAG_ID.FIGURE:\r\n        case TAG_ID.FOOTER:\r\n        case TAG_ID.HEADER:\r\n        case TAG_ID.HGROUP:\r\n        case TAG_ID.DIALOG:\r\n        case TAG_ID.DETAILS:\r\n        case TAG_ID.ADDRESS:\r\n        case TAG_ID.ARTICLE:\r\n        case TAG_ID.SECTION:\r\n        case TAG_ID.SUMMARY:\r\n        case TAG_ID.FIELDSET:\r\n        case TAG_ID.BLOCKQUOTE:\r\n        case TAG_ID.FIGCAPTION: {\r\n            addressStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.LI:\r\n        case TAG_ID.DD:\r\n        case TAG_ID.DT: {\r\n            listItemStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.BR:\r\n        case TAG_ID.IMG:\r\n        case TAG_ID.WBR:\r\n        case TAG_ID.AREA:\r\n        case TAG_ID.EMBED:\r\n        case TAG_ID.KEYGEN: {\r\n            areaStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.HR: {\r\n            hrStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.RB:\r\n        case TAG_ID.RTC: {\r\n            rbStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.RT:\r\n        case TAG_ID.RP: {\r\n            rtStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.PRE:\r\n        case TAG_ID.LISTING: {\r\n            preStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.XMP: {\r\n            xmpStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.SVG: {\r\n            svgStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.HTML: {\r\n            htmlStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.BASE:\r\n        case TAG_ID.LINK:\r\n        case TAG_ID.META:\r\n        case TAG_ID.STYLE:\r\n        case TAG_ID.TITLE:\r\n        case TAG_ID.SCRIPT:\r\n        case TAG_ID.BGSOUND:\r\n        case TAG_ID.BASEFONT:\r\n        case TAG_ID.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.BODY: {\r\n            bodyStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.FORM: {\r\n            formStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.NOBR: {\r\n            nobrStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.MATH: {\r\n            mathStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.TABLE: {\r\n            tableStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.INPUT: {\r\n            inputStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.PARAM:\r\n        case TAG_ID.TRACK:\r\n        case TAG_ID.SOURCE: {\r\n            paramStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.IMAGE: {\r\n            imageStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.BUTTON: {\r\n            buttonStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.APPLET:\r\n        case TAG_ID.OBJECT:\r\n        case TAG_ID.MARQUEE: {\r\n            appletStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.IFRAME: {\r\n            iframeStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.SELECT: {\r\n            selectStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.OPTION:\r\n        case TAG_ID.OPTGROUP: {\r\n            optgroupStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.NOEMBED: {\r\n            noembedStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.FRAMESET: {\r\n            framesetStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.TEXTAREA: {\r\n            textareaStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.NOSCRIPT: {\r\n            if (p.options.scriptingEnabled) {\r\n                noembedStartTagInBody(p, token);\r\n            }\r\n            else {\r\n                genericStartTagInBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.PLAINTEXT: {\r\n            plaintextStartTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.COL:\r\n        case TAG_ID.TH:\r\n        case TAG_ID.TD:\r\n        case TAG_ID.TR:\r\n        case TAG_ID.HEAD:\r\n        case TAG_ID.FRAME:\r\n        case TAG_ID.TBODY:\r\n        case TAG_ID.TFOOT:\r\n        case TAG_ID.THEAD:\r\n        case TAG_ID.CAPTION:\r\n        case TAG_ID.COLGROUP: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            genericStartTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\nfunction bodyEndTagInBody(p, token) {\r\n    if (p.openElements.hasInScope(TAG_ID.BODY)) {\r\n        p.insertionMode = InsertionMode.AFTER_BODY;\r\n        //NOTE: <body> is never popped from the stack, so we need to updated\r\n        //the end location explicitly.\r\n        if (p.options.sourceCodeLocationInfo) {\r\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\r\n            if (bodyElement) {\r\n                p._setEndLocation(bodyElement, token);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction htmlEndTagInBody(p, token) {\r\n    if (p.openElements.hasInScope(TAG_ID.BODY)) {\r\n        p.insertionMode = InsertionMode.AFTER_BODY;\r\n        endTagAfterBody(p, token);\r\n    }\r\n}\r\nfunction addressEndTagInBody(p, token) {\r\n    const tn = token.tagID;\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n    }\r\n}\r\nfunction formEndTagInBody(p) {\r\n    const inTemplate = p.openElements.tmplCount > 0;\r\n    const { formElement } = p;\r\n    if (!inTemplate) {\r\n        p.formElement = null;\r\n    }\r\n    if ((formElement || inTemplate) && p.openElements.hasInScope(TAG_ID.FORM)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        if (inTemplate) {\r\n            p.openElements.popUntilTagNamePopped(TAG_ID.FORM);\r\n        }\r\n        else if (formElement) {\r\n            p.openElements.remove(formElement);\r\n        }\r\n    }\r\n}\r\nfunction pEndTagInBody(p) {\r\n    if (!p.openElements.hasInButtonScope(TAG_ID.P)) {\r\n        p._insertFakeElement(TAG_NAMES.P, TAG_ID.P);\r\n    }\r\n    p._closePElement();\r\n}\r\nfunction liEndTagInBody(p) {\r\n    if (p.openElements.hasInListItemScope(TAG_ID.LI)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion(TAG_ID.LI);\r\n        p.openElements.popUntilTagNamePopped(TAG_ID.LI);\r\n    }\r\n}\r\nfunction ddEndTagInBody(p, token) {\r\n    const tn = token.tagID;\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n    }\r\n}\r\nfunction numberedHeaderEndTagInBody(p) {\r\n    if (p.openElements.hasNumberedHeaderInScope()) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilNumberedHeaderPopped();\r\n    }\r\n}\r\nfunction appletEndTagInBody(p, token) {\r\n    const tn = token.tagID;\r\n    if (p.openElements.hasInScope(tn)) {\r\n        p.openElements.generateImpliedEndTags();\r\n        p.openElements.popUntilTagNamePopped(tn);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n    }\r\n}\r\nfunction brEndTagInBody(p) {\r\n    p._reconstructActiveFormattingElements();\r\n    p._insertFakeElement(TAG_NAMES.BR, TAG_ID.BR);\r\n    p.openElements.pop();\r\n    p.framesetOk = false;\r\n}\r\nfunction genericEndTagInBody(p, token) {\r\n    const tn = token.tagName;\r\n    const tid = token.tagID;\r\n    for (let i = p.openElements.stackTop; i > 0; i--) {\r\n        const element = p.openElements.items[i];\r\n        const elementId = p.openElements.tagIDs[i];\r\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\r\n        if (tid === elementId && (tid !== TAG_ID.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\r\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\r\n            if (p.openElements.stackTop >= i)\r\n                p.openElements.shortenToLength(i);\r\n            break;\r\n        }\r\n        if (p._isSpecialElement(element, elementId)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction endTagInBody(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.A:\r\n        case TAG_ID.B:\r\n        case TAG_ID.I:\r\n        case TAG_ID.S:\r\n        case TAG_ID.U:\r\n        case TAG_ID.EM:\r\n        case TAG_ID.TT:\r\n        case TAG_ID.BIG:\r\n        case TAG_ID.CODE:\r\n        case TAG_ID.FONT:\r\n        case TAG_ID.NOBR:\r\n        case TAG_ID.SMALL:\r\n        case TAG_ID.STRIKE:\r\n        case TAG_ID.STRONG: {\r\n            callAdoptionAgency(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.P: {\r\n            pEndTagInBody(p);\r\n            break;\r\n        }\r\n        case TAG_ID.DL:\r\n        case TAG_ID.UL:\r\n        case TAG_ID.OL:\r\n        case TAG_ID.DIR:\r\n        case TAG_ID.DIV:\r\n        case TAG_ID.NAV:\r\n        case TAG_ID.PRE:\r\n        case TAG_ID.MAIN:\r\n        case TAG_ID.MENU:\r\n        case TAG_ID.ASIDE:\r\n        case TAG_ID.BUTTON:\r\n        case TAG_ID.CENTER:\r\n        case TAG_ID.FIGURE:\r\n        case TAG_ID.FOOTER:\r\n        case TAG_ID.HEADER:\r\n        case TAG_ID.HGROUP:\r\n        case TAG_ID.DIALOG:\r\n        case TAG_ID.ADDRESS:\r\n        case TAG_ID.ARTICLE:\r\n        case TAG_ID.DETAILS:\r\n        case TAG_ID.SECTION:\r\n        case TAG_ID.SUMMARY:\r\n        case TAG_ID.LISTING:\r\n        case TAG_ID.FIELDSET:\r\n        case TAG_ID.BLOCKQUOTE:\r\n        case TAG_ID.FIGCAPTION: {\r\n            addressEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.LI: {\r\n            liEndTagInBody(p);\r\n            break;\r\n        }\r\n        case TAG_ID.DD:\r\n        case TAG_ID.DT: {\r\n            ddEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.H1:\r\n        case TAG_ID.H2:\r\n        case TAG_ID.H3:\r\n        case TAG_ID.H4:\r\n        case TAG_ID.H5:\r\n        case TAG_ID.H6: {\r\n            numberedHeaderEndTagInBody(p);\r\n            break;\r\n        }\r\n        case TAG_ID.BR: {\r\n            brEndTagInBody(p);\r\n            break;\r\n        }\r\n        case TAG_ID.BODY: {\r\n            bodyEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.HTML: {\r\n            htmlEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.FORM: {\r\n            formEndTagInBody(p);\r\n            break;\r\n        }\r\n        case TAG_ID.APPLET:\r\n        case TAG_ID.OBJECT:\r\n        case TAG_ID.MARQUEE: {\r\n            appletEndTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            genericEndTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\nfunction eofInBody(p, token) {\r\n    if (p.tmplInsertionModeStack.length > 0) {\r\n        eofInTemplate(p, token);\r\n    }\r\n    else {\r\n        stopParsing(p, token);\r\n    }\r\n}\r\n// The \"text\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction endTagInText(p, token) {\r\n    var _a;\r\n    if (token.tagID === TAG_ID.SCRIPT) {\r\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\r\n    }\r\n    p.openElements.pop();\r\n    p.insertionMode = p.originalInsertionMode;\r\n}\r\nfunction eofInText(p, token) {\r\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\r\n    p.openElements.pop();\r\n    p.insertionMode = p.originalInsertionMode;\r\n    p.onEof(token);\r\n}\r\n// The \"in table\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction characterInTable(p, token) {\r\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\r\n        p.pendingCharacterTokens.length = 0;\r\n        p.hasNonWhitespacePendingCharacterToken = false;\r\n        p.originalInsertionMode = p.insertionMode;\r\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\r\n        switch (token.type) {\r\n            case TokenType.CHARACTER: {\r\n                characterInTableText(p, token);\r\n                break;\r\n            }\r\n            case TokenType.WHITESPACE_CHARACTER: {\r\n                whitespaceCharacterInTableText(p, token);\r\n                break;\r\n            }\r\n            // Ignore null\r\n        }\r\n    }\r\n    else {\r\n        tokenInTable(p, token);\r\n    }\r\n}\r\nfunction captionStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p.activeFormattingElements.insertMarker();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = InsertionMode.IN_CAPTION;\r\n}\r\nfunction colgroupStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n}\r\nfunction colStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertFakeElement(TAG_NAMES.COLGROUP, TAG_ID.COLGROUP);\r\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n    startTagInColumnGroup(p, token);\r\n}\r\nfunction tbodyStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertElement(token, NS.HTML);\r\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n}\r\nfunction tdStartTagInTable(p, token) {\r\n    p.openElements.clearBackToTableContext();\r\n    p._insertFakeElement(TAG_NAMES.TBODY, TAG_ID.TBODY);\r\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n    startTagInTableBody(p, token);\r\n}\r\nfunction tableStartTagInTable(p, token) {\r\n    if (p.openElements.hasInTableScope(TAG_ID.TABLE)) {\r\n        p.openElements.popUntilTagNamePopped(TAG_ID.TABLE);\r\n        p._resetInsertionMode();\r\n        p._processStartTag(token);\r\n    }\r\n}\r\nfunction inputStartTagInTable(p, token) {\r\n    if (isHiddenInput(token)) {\r\n        p._appendElement(token, NS.HTML);\r\n    }\r\n    else {\r\n        tokenInTable(p, token);\r\n    }\r\n    token.ackSelfClosing = true;\r\n}\r\nfunction formStartTagInTable(p, token) {\r\n    if (!p.formElement && p.openElements.tmplCount === 0) {\r\n        p._insertElement(token, NS.HTML);\r\n        p.formElement = p.openElements.current;\r\n        p.openElements.pop();\r\n    }\r\n}\r\nfunction startTagInTable(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.TD:\r\n        case TAG_ID.TH:\r\n        case TAG_ID.TR: {\r\n            tdStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.STYLE:\r\n        case TAG_ID.SCRIPT:\r\n        case TAG_ID.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.COL: {\r\n            colStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.FORM: {\r\n            formStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.TABLE: {\r\n            tableStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.TBODY:\r\n        case TAG_ID.TFOOT:\r\n        case TAG_ID.THEAD: {\r\n            tbodyStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.INPUT: {\r\n            inputStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.CAPTION: {\r\n            captionStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.COLGROUP: {\r\n            colgroupStartTagInTable(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInTable(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.TABLE: {\r\n            if (p.openElements.hasInTableScope(TAG_ID.TABLE)) {\r\n                p.openElements.popUntilTagNamePopped(TAG_ID.TABLE);\r\n                p._resetInsertionMode();\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.BODY:\r\n        case TAG_ID.CAPTION:\r\n        case TAG_ID.COL:\r\n        case TAG_ID.COLGROUP:\r\n        case TAG_ID.HTML:\r\n        case TAG_ID.TBODY:\r\n        case TAG_ID.TD:\r\n        case TAG_ID.TFOOT:\r\n        case TAG_ID.TH:\r\n        case TAG_ID.THEAD:\r\n        case TAG_ID.TR: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction tokenInTable(p, token) {\r\n    const savedFosterParentingState = p.fosterParentingEnabled;\r\n    p.fosterParentingEnabled = true;\r\n    // Process token in `In Body` mode\r\n    modeInBody(p, token);\r\n    p.fosterParentingEnabled = savedFosterParentingState;\r\n}\r\n// The \"in table text\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction whitespaceCharacterInTableText(p, token) {\r\n    p.pendingCharacterTokens.push(token);\r\n}\r\nfunction characterInTableText(p, token) {\r\n    p.pendingCharacterTokens.push(token);\r\n    p.hasNonWhitespacePendingCharacterToken = true;\r\n}\r\nfunction tokenInTableText(p, token) {\r\n    let i = 0;\r\n    if (p.hasNonWhitespacePendingCharacterToken) {\r\n        for (; i < p.pendingCharacterTokens.length; i++) {\r\n            tokenInTable(p, p.pendingCharacterTokens[i]);\r\n        }\r\n    }\r\n    else {\r\n        for (; i < p.pendingCharacterTokens.length; i++) {\r\n            p._insertCharacters(p.pendingCharacterTokens[i]);\r\n        }\r\n    }\r\n    p.insertionMode = p.originalInsertionMode;\r\n    p._processToken(token);\r\n}\r\n// The \"in caption\" insertion mode\r\n//------------------------------------------------------------------\r\nconst TABLE_VOID_ELEMENTS = new Set([TAG_ID.CAPTION, TAG_ID.COL, TAG_ID.COLGROUP, TAG_ID.TBODY, TAG_ID.TD, TAG_ID.TFOOT, TAG_ID.TH, TAG_ID.THEAD, TAG_ID.TR]);\r\nfunction startTagInCaption(p, token) {\r\n    const tn = token.tagID;\r\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\r\n        if (p.openElements.hasInTableScope(TAG_ID.CAPTION)) {\r\n            p.openElements.generateImpliedEndTags();\r\n            p.openElements.popUntilTagNamePopped(TAG_ID.CAPTION);\r\n            p.activeFormattingElements.clearToLastMarker();\r\n            p.insertionMode = InsertionMode.IN_TABLE;\r\n            startTagInTable(p, token);\r\n        }\r\n    }\r\n    else {\r\n        startTagInBody(p, token);\r\n    }\r\n}\r\nfunction endTagInCaption(p, token) {\r\n    const tn = token.tagID;\r\n    switch (tn) {\r\n        case TAG_ID.CAPTION:\r\n        case TAG_ID.TABLE: {\r\n            if (p.openElements.hasInTableScope(TAG_ID.CAPTION)) {\r\n                p.openElements.generateImpliedEndTags();\r\n                p.openElements.popUntilTagNamePopped(TAG_ID.CAPTION);\r\n                p.activeFormattingElements.clearToLastMarker();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n                if (tn === TAG_ID.TABLE) {\r\n                    endTagInTable(p, token);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.BODY:\r\n        case TAG_ID.COL:\r\n        case TAG_ID.COLGROUP:\r\n        case TAG_ID.HTML:\r\n        case TAG_ID.TBODY:\r\n        case TAG_ID.TD:\r\n        case TAG_ID.TFOOT:\r\n        case TAG_ID.TH:\r\n        case TAG_ID.THEAD:\r\n        case TAG_ID.TR: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in column group\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInColumnGroup(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.COL: {\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case TAG_ID.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInColumnGroup(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInColumnGroup(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.COLGROUP: {\r\n            if (p.openElements.currentTagId === TAG_ID.COLGROUP) {\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.COL: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            tokenInColumnGroup(p, token);\r\n        }\r\n    }\r\n}\r\nfunction tokenInColumnGroup(p, token) {\r\n    if (p.openElements.currentTagId === TAG_ID.COLGROUP) {\r\n        p.openElements.pop();\r\n        p.insertionMode = InsertionMode.IN_TABLE;\r\n        p._processToken(token);\r\n    }\r\n}\r\n// The \"in table body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInTableBody(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.TR: {\r\n            p.openElements.clearBackToTableBodyContext();\r\n            p._insertElement(token, NS.HTML);\r\n            p.insertionMode = InsertionMode.IN_ROW;\r\n            break;\r\n        }\r\n        case TAG_ID.TH:\r\n        case TAG_ID.TD: {\r\n            p.openElements.clearBackToTableBodyContext();\r\n            p._insertFakeElement(TAG_NAMES.TR, TAG_ID.TR);\r\n            p.insertionMode = InsertionMode.IN_ROW;\r\n            startTagInRow(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.CAPTION:\r\n        case TAG_ID.COL:\r\n        case TAG_ID.COLGROUP:\r\n        case TAG_ID.TBODY:\r\n        case TAG_ID.TFOOT:\r\n        case TAG_ID.THEAD: {\r\n            if (p.openElements.hasTableBodyContextInTableScope()) {\r\n                p.openElements.clearBackToTableBodyContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n                startTagInTable(p, token);\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n            startTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInTableBody(p, token) {\r\n    const tn = token.tagID;\r\n    switch (token.tagID) {\r\n        case TAG_ID.TBODY:\r\n        case TAG_ID.TFOOT:\r\n        case TAG_ID.THEAD: {\r\n            if (p.openElements.hasInTableScope(tn)) {\r\n                p.openElements.clearBackToTableBodyContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.TABLE: {\r\n            if (p.openElements.hasTableBodyContextInTableScope()) {\r\n                p.openElements.clearBackToTableBodyContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE;\r\n                endTagInTable(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.BODY:\r\n        case TAG_ID.CAPTION:\r\n        case TAG_ID.COL:\r\n        case TAG_ID.COLGROUP:\r\n        case TAG_ID.HTML:\r\n        case TAG_ID.TD:\r\n        case TAG_ID.TH:\r\n        case TAG_ID.TR: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in row\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInRow(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.TH:\r\n        case TAG_ID.TD: {\r\n            p.openElements.clearBackToTableRowContext();\r\n            p._insertElement(token, NS.HTML);\r\n            p.insertionMode = InsertionMode.IN_CELL;\r\n            p.activeFormattingElements.insertMarker();\r\n            break;\r\n        }\r\n        case TAG_ID.CAPTION:\r\n        case TAG_ID.COL:\r\n        case TAG_ID.COLGROUP:\r\n        case TAG_ID.TBODY:\r\n        case TAG_ID.TFOOT:\r\n        case TAG_ID.THEAD:\r\n        case TAG_ID.TR: {\r\n            if (p.openElements.hasInTableScope(TAG_ID.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                startTagInTableBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        default: {\r\n            startTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInRow(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.TR: {\r\n            if (p.openElements.hasInTableScope(TAG_ID.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.TABLE: {\r\n            if (p.openElements.hasInTableScope(TAG_ID.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                endTagInTableBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.TBODY:\r\n        case TAG_ID.TFOOT:\r\n        case TAG_ID.THEAD: {\r\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope(TAG_ID.TR)) {\r\n                p.openElements.clearBackToTableRowContext();\r\n                p.openElements.pop();\r\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n                endTagInTableBody(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.BODY:\r\n        case TAG_ID.CAPTION:\r\n        case TAG_ID.COL:\r\n        case TAG_ID.COLGROUP:\r\n        case TAG_ID.HTML:\r\n        case TAG_ID.TD:\r\n        case TAG_ID.TH: {\r\n            // Ignore end tag\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInTable(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in cell\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInCell(p, token) {\r\n    const tn = token.tagID;\r\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\r\n        if (p.openElements.hasInTableScope(TAG_ID.TD) || p.openElements.hasInTableScope(TAG_ID.TH)) {\r\n            p._closeTableCell();\r\n            startTagInRow(p, token);\r\n        }\r\n    }\r\n    else {\r\n        startTagInBody(p, token);\r\n    }\r\n}\r\nfunction endTagInCell(p, token) {\r\n    const tn = token.tagID;\r\n    switch (tn) {\r\n        case TAG_ID.TD:\r\n        case TAG_ID.TH: {\r\n            if (p.openElements.hasInTableScope(tn)) {\r\n                p.openElements.generateImpliedEndTags();\r\n                p.openElements.popUntilTagNamePopped(tn);\r\n                p.activeFormattingElements.clearToLastMarker();\r\n                p.insertionMode = InsertionMode.IN_ROW;\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.TABLE:\r\n        case TAG_ID.TBODY:\r\n        case TAG_ID.TFOOT:\r\n        case TAG_ID.THEAD:\r\n        case TAG_ID.TR: {\r\n            if (p.openElements.hasInTableScope(tn)) {\r\n                p._closeTableCell();\r\n                endTagInRow(p, token);\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.BODY:\r\n        case TAG_ID.CAPTION:\r\n        case TAG_ID.COL:\r\n        case TAG_ID.COLGROUP:\r\n        case TAG_ID.HTML: {\r\n            // Ignore token\r\n            break;\r\n        }\r\n        default: {\r\n            endTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\n// The \"in select\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInSelect(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.OPTION: {\r\n            if (p.openElements.currentTagId === TAG_ID.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            p._insertElement(token, NS.HTML);\r\n            break;\r\n        }\r\n        case TAG_ID.OPTGROUP: {\r\n            if (p.openElements.currentTagId === TAG_ID.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            if (p.openElements.currentTagId === TAG_ID.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            p._insertElement(token, NS.HTML);\r\n            break;\r\n        }\r\n        case TAG_ID.INPUT:\r\n        case TAG_ID.KEYGEN:\r\n        case TAG_ID.TEXTAREA:\r\n        case TAG_ID.SELECT: {\r\n            if (p.openElements.hasInSelectScope(TAG_ID.SELECT)) {\r\n                p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);\r\n                p._resetInsertionMode();\r\n                if (token.tagID !== TAG_ID.SELECT) {\r\n                    p._processStartTag(token);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.SCRIPT:\r\n        case TAG_ID.TEMPLATE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        // Do nothing\r\n    }\r\n}\r\nfunction endTagInSelect(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.OPTGROUP: {\r\n            if (p.openElements.stackTop > 0 &&\r\n                p.openElements.currentTagId === TAG_ID.OPTION &&\r\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === TAG_ID.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            if (p.openElements.currentTagId === TAG_ID.OPTGROUP) {\r\n                p.openElements.pop();\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.OPTION: {\r\n            if (p.openElements.currentTagId === TAG_ID.OPTION) {\r\n                p.openElements.pop();\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.SELECT: {\r\n            if (p.openElements.hasInSelectScope(TAG_ID.SELECT)) {\r\n                p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);\r\n                p._resetInsertionMode();\r\n            }\r\n            break;\r\n        }\r\n        case TAG_ID.TEMPLATE: {\r\n            templateEndTagInHead(p, token);\r\n            break;\r\n        }\r\n        // Do nothing\r\n    }\r\n}\r\n// The \"in select in table\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInSelectInTable(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === TAG_ID.CAPTION ||\r\n        tn === TAG_ID.TABLE ||\r\n        tn === TAG_ID.TBODY ||\r\n        tn === TAG_ID.TFOOT ||\r\n        tn === TAG_ID.THEAD ||\r\n        tn === TAG_ID.TR ||\r\n        tn === TAG_ID.TD ||\r\n        tn === TAG_ID.TH) {\r\n        p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);\r\n        p._resetInsertionMode();\r\n        p._processStartTag(token);\r\n    }\r\n    else {\r\n        startTagInSelect(p, token);\r\n    }\r\n}\r\nfunction endTagInSelectInTable(p, token) {\r\n    const tn = token.tagID;\r\n    if (tn === TAG_ID.CAPTION ||\r\n        tn === TAG_ID.TABLE ||\r\n        tn === TAG_ID.TBODY ||\r\n        tn === TAG_ID.TFOOT ||\r\n        tn === TAG_ID.THEAD ||\r\n        tn === TAG_ID.TR ||\r\n        tn === TAG_ID.TD ||\r\n        tn === TAG_ID.TH) {\r\n        if (p.openElements.hasInTableScope(tn)) {\r\n            p.openElements.popUntilTagNamePopped(TAG_ID.SELECT);\r\n            p._resetInsertionMode();\r\n            p.onEndTag(token);\r\n        }\r\n    }\r\n    else {\r\n        endTagInSelect(p, token);\r\n    }\r\n}\r\n// The \"in template\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInTemplate(p, token) {\r\n    switch (token.tagID) {\r\n        // First, handle tags that can start without a mode change\r\n        case TAG_ID.BASE:\r\n        case TAG_ID.BASEFONT:\r\n        case TAG_ID.BGSOUND:\r\n        case TAG_ID.LINK:\r\n        case TAG_ID.META:\r\n        case TAG_ID.NOFRAMES:\r\n        case TAG_ID.SCRIPT:\r\n        case TAG_ID.STYLE:\r\n        case TAG_ID.TEMPLATE:\r\n        case TAG_ID.TITLE: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        // Re-process the token in the appropriate mode\r\n        case TAG_ID.CAPTION:\r\n        case TAG_ID.COLGROUP:\r\n        case TAG_ID.TBODY:\r\n        case TAG_ID.TFOOT:\r\n        case TAG_ID.THEAD: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\r\n            p.insertionMode = InsertionMode.IN_TABLE;\r\n            startTagInTable(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.COL: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\r\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\r\n            startTagInColumnGroup(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.TR: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\r\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\r\n            startTagInTableBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.TD:\r\n        case TAG_ID.TH: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\r\n            p.insertionMode = InsertionMode.IN_ROW;\r\n            startTagInRow(p, token);\r\n            break;\r\n        }\r\n        default: {\r\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\r\n            p.insertionMode = InsertionMode.IN_BODY;\r\n            startTagInBody(p, token);\r\n        }\r\n    }\r\n}\r\nfunction endTagInTemplate(p, token) {\r\n    if (token.tagID === TAG_ID.TEMPLATE) {\r\n        templateEndTagInHead(p, token);\r\n    }\r\n}\r\nfunction eofInTemplate(p, token) {\r\n    if (p.openElements.tmplCount > 0) {\r\n        p.openElements.popUntilTagNamePopped(TAG_ID.TEMPLATE);\r\n        p.activeFormattingElements.clearToLastMarker();\r\n        p.tmplInsertionModeStack.shift();\r\n        p._resetInsertionMode();\r\n        p.onEof(token);\r\n    }\r\n    else {\r\n        stopParsing(p, token);\r\n    }\r\n}\r\n// The \"after body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterBody(p, token) {\r\n    if (token.tagID === TAG_ID.HTML) {\r\n        startTagInBody(p, token);\r\n    }\r\n    else {\r\n        tokenAfterBody(p, token);\r\n    }\r\n}\r\nfunction endTagAfterBody(p, token) {\r\n    var _a;\r\n    if (token.tagID === TAG_ID.HTML) {\r\n        if (!p.fragmentContext) {\r\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\r\n        }\r\n        //NOTE: <html> is never popped from the stack, so we need to updated\r\n        //the end location explicitly.\r\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === TAG_ID.HTML) {\r\n            p._setEndLocation(p.openElements.items[0], token);\r\n            // Update the body element, if it doesn't have an end tag\r\n            const bodyElement = p.openElements.items[1];\r\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\r\n                p._setEndLocation(bodyElement, token);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        tokenAfterBody(p, token);\r\n    }\r\n}\r\nfunction tokenAfterBody(p, token) {\r\n    p.insertionMode = InsertionMode.IN_BODY;\r\n    modeInBody(p, token);\r\n}\r\n// The \"in frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagInFrameset(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.FRAMESET: {\r\n            p._insertElement(token, NS.HTML);\r\n            break;\r\n        }\r\n        case TAG_ID.FRAME: {\r\n            p._appendElement(token, NS.HTML);\r\n            token.ackSelfClosing = true;\r\n            break;\r\n        }\r\n        case TAG_ID.NOFRAMES: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        // Do nothing\r\n    }\r\n}\r\nfunction endTagInFrameset(p, token) {\r\n    if (token.tagID === TAG_ID.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\r\n        p.openElements.pop();\r\n        if (!p.fragmentContext && p.openElements.currentTagId !== TAG_ID.FRAMESET) {\r\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\r\n        }\r\n    }\r\n}\r\n// The \"after frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterFrameset(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.NOFRAMES: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        // Do nothing\r\n    }\r\n}\r\nfunction endTagAfterFrameset(p, token) {\r\n    if (token.tagID === TAG_ID.HTML) {\r\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\r\n    }\r\n}\r\n// The \"after after body\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterAfterBody(p, token) {\r\n    if (token.tagID === TAG_ID.HTML) {\r\n        startTagInBody(p, token);\r\n    }\r\n    else {\r\n        tokenAfterAfterBody(p, token);\r\n    }\r\n}\r\nfunction tokenAfterAfterBody(p, token) {\r\n    p.insertionMode = InsertionMode.IN_BODY;\r\n    modeInBody(p, token);\r\n}\r\n// The \"after after frameset\" insertion mode\r\n//------------------------------------------------------------------\r\nfunction startTagAfterAfterFrameset(p, token) {\r\n    switch (token.tagID) {\r\n        case TAG_ID.HTML: {\r\n            startTagInBody(p, token);\r\n            break;\r\n        }\r\n        case TAG_ID.NOFRAMES: {\r\n            startTagInHead(p, token);\r\n            break;\r\n        }\r\n        // Do nothing\r\n    }\r\n}\r\n// The rules for parsing tokens in foreign content\r\n//------------------------------------------------------------------\r\nfunction nullCharacterInForeignContent(p, token) {\r\n    token.chars = REPLACEMENT_CHARACTER;\r\n    p._insertCharacters(token);\r\n}\r\nfunction characterInForeignContent(p, token) {\r\n    p._insertCharacters(token);\r\n    p.framesetOk = false;\r\n}\r\nfunction popUntilHtmlOrIntegrationPoint(p) {\r\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\r\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\r\n        p.openElements.pop();\r\n    }\r\n}\r\nfunction startTagInForeignContent(p, token) {\r\n    if (causesExit(token)) {\r\n        popUntilHtmlOrIntegrationPoint(p);\r\n        p._startTagOutsideForeignContent(token);\r\n    }\r\n    else {\r\n        const current = p._getAdjustedCurrentElement();\r\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\r\n        if (currentNs === NS.MATHML) {\r\n            adjustTokenMathMLAttrs(token);\r\n        }\r\n        else if (currentNs === NS.SVG) {\r\n            adjustTokenSVGTagName(token);\r\n            adjustTokenSVGAttrs(token);\r\n        }\r\n        adjustTokenXMLAttrs(token);\r\n        if (token.selfClosing) {\r\n            p._appendElement(token, currentNs);\r\n        }\r\n        else {\r\n            p._insertElement(token, currentNs);\r\n        }\r\n        token.ackSelfClosing = true;\r\n    }\r\n}\r\nfunction endTagInForeignContent(p, token) {\r\n    if (token.tagID === TAG_ID.P || token.tagID === TAG_ID.BR) {\r\n        popUntilHtmlOrIntegrationPoint(p);\r\n        p._endTagOutsideForeignContent(token);\r\n        return;\r\n    }\r\n    for (let i = p.openElements.stackTop; i > 0; i--) {\r\n        const element = p.openElements.items[i];\r\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\r\n            p._endTagOutsideForeignContent(token);\r\n            break;\r\n        }\r\n        const tagName = p.treeAdapter.getTagName(element);\r\n        if (tagName.toLowerCase() === token.tagName) {\r\n            //NOTE: update the token tag name for `_setEndLocation`.\r\n            token.tagName = tagName;\r\n            p.openElements.shortenToLength(i);\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n// Shorthands\r\n/**\r\n * Parses an HTML string.\r\n *\r\n * @param html Input HTML string.\r\n * @param options Parsing options.\r\n * @returns Document\r\n *\r\n * @example\r\n *\r\n * ```js\r\n * const parse5 = require('parse5');\r\n *\r\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\r\n *\r\n * console.log(document.childNodes[1].tagName); //> 'html'\r\n *```\r\n */\r\nfunction parse(html, options) {\r\n    return Parser.parse(html, options);\r\n}\r\n\r\nexport { ERR as ErrorCodes, Parser, Tokenizer, TokenizerMode, defaultTreeAdapter, parse };\r\n"],
  "mappings": "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",
  "names": ["__cjs_fileURLToPath", "__cjs_dirname", "require", "__cjs_createRequire", "CODE_POINTS", "ERR", "TokenType", "CharCodes", "BinTrieFlags", "NS", "ATTRS", "DOCUMENT_MODE", "TAG_NAMES", "TAG_ID", "State", "EntryType", "entry", "InsertionMode"]
}
